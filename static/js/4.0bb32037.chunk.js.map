{"version":3,"sources":["Dashboard/utils.tsx","Dashboard/Player/PlayerButton.tsx","Dashboard/Player/DesktopPlayer.tsx","Dashboard/Player/PlayerBar.tsx","Dashboard/Player/index.tsx","Dashboard/SideNavItem.tsx","Dashboard/types.tsx","Dashboard/SideNav.tsx","Dashboard/views/EpisodeView.tsx","Dashboard/TextEntry.tsx","Dashboard/Item.tsx","Dashboard/FeedItem.tsx","Dashboard/views/FeedsView.tsx","Dashboard/EpisodeItem.tsx","Dashboard/views/FeedView.tsx","Dashboard/views/SearchView.tsx","Dashboard/views/SettingsView.tsx","Dashboard/AudioPlayer.ts","Dashboard/index.tsx"],"names":["options","fields","meta","episodes","required","requestPodcast","proxy","url","a","console","log","combined","endsWith","getPodcastFromURL","saveData","userSession","filename","data","putFile","JSON","stringify","loadData","getFile","then","content","ArrayBuffer","parse","episodeImage","ref","feeds","episode","imageURL","feedUrl","timestamp","secs","hours","Math","floor","minutes","seconds","pad","value","toString","padStart","PlayerButton","this","props","audioPlayer","fallback","toggle","bind","isLoaded","isPaused","onClick","e","stopPropagation","Component","DesktopPlayer","seekAmount","className","seekRelative","time","type","min","max","duration","step","onChange","seekTo","target","PlayerBar","style","display","width","fraction","Player","openEpisode","settings","epRef","getEpRef","episodeTitle","title","feedTitle","src","alt","dangerouslySetInnerHTML","__html","description","SideNavItem","icon","text","View","SideNav","open","openSettings","openHome","openFeed","openSearch","changeState","signOut","isOpen","customBurgerIcon","onStateChange","state","Object","entries","map","feed","key","preventDefault","DEFAULT_SETTINGS","corsProxy","seekBackwards","seekForwards","EpisodeView","same","size","PlayButton","playEpisode","TextEntry","entered","defaultValue","handleKey","placeholder","setState","onKeyDown","callback","Item","image","body","icons","FeedItem","deleteFeed","length","moment","fromNow","FeedsView","addFeed","keys","EpisodeItem","pubDate","format","FeedView","guid","PureComponent","SearchView","searchTerm","flatMap","episodeDescription","renderedEpisodes","fuzzysort","go","limit","threshold","result","obj","SettingsView","updateSettings","href","pattern","updateProxy","isUrl","fixCharacter","updateCharacter","string","character","valid","characters","toLowerCase","border","AudioPlayer","refresh","syncCallback","audio","timer","syncTimer","document","createElement","navigator","mediaSession","setActionHandler","play","pause","playing","enclosure","currentTime","playNoCallback","pauseNoCallback","metadata","MediaMetadata","album","artwork","paused","playbackState","window","setInterval","sync","clearInterval","Dashboard","saveTimer","view","Feeds","viewing","undefined","sidenavOpen","savePlaying","keyName","_key","_handle","Viewing","Settings","Search","inner","updates","update","$merge","saveSettings","error","loadEp","Promise","all","saveFeeds","$unset","Date","now"],"mappings":"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","file":"static/js/4.0bb32037.chunk.js","sourcesContent":["import {UserSession} from 'blockstack';\nimport {getPodcastFromURL} from 'podcast-feed-parser';\nimport {EpisodeReference, Feed, Feeds} from './types';\n\n// https://github.com/jbierfeldt/podcast-feed-parser/blob/master/index.js#L17\nconst options = {\n  fields: {\n    meta: ['title', 'description', 'imageURL'],\n    episodes: ['title', 'description', 'imageURL', 'pubDate', 'enclosure', 'duration', 'guid']\n  },\n\n  required: {\n    meta: ['title', 'description'],\n    episodes: []\n  }\n};\n\nexport async function requestPodcast(proxy: string, url: string): Promise<Feed> {\n  console.log(`Requesting '${url}' via '${proxy}'`);\n  const combined = proxy.endsWith('/') ? proxy + url : `${proxy}/${url}`;\n  return getPodcastFromURL(combined, options);\n}\n\nexport function saveData<T>(userSession: UserSession, filename: string, data: T): Promise<string> {\n  return userSession.putFile(filename, JSON.stringify(data), {});\n}\n\nexport async function loadData<T>(userSession: UserSession, filename: string): Promise<T> {\n  return userSession.getFile(filename, {})\n    .then(content => {\n      if (content instanceof ArrayBuffer) {\n        // todo: error\n        return {};\n      }\n      return JSON.parse(content) || {};\n    });\n}\n\nexport function episodeImage(ref: EpisodeReference, feeds: Feeds): string {\n  return ref.episode.imageURL || feeds[ref.feedUrl].data.meta.imageURL;\n}\n\nexport function timestamp(secs: number): string {\n  const hours = Math.floor(secs / 3600);\n  const minutes = Math.floor((secs - (hours * 3600)) / 60);\n  const seconds = Math.floor(secs % 60);\n\n  return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n}\n\nfunction pad(value: number): string {\n  return value.toString().padStart(2, '0');\n}\n","import React, {Component, MouseEvent, ReactElement} from 'react';\nimport {Play, Pause} from 'react-feather';\nimport AudioPlayer from '../AudioPlayer';\n\ninterface Props {\n  audioPlayer: AudioPlayer;\n  fallback?: ReactElement;\n}\n\nexport default class PlayerButton extends Component<Props> {\n  render() {\n    const {audioPlayer, fallback} = this.props;\n    const toggle = this.toggle.bind(this);\n\n    if (audioPlayer.isLoaded()) {\n      if (audioPlayer.isPaused()) {\n        return <Play onClick={toggle} />;\n      }\n      return <Pause onClick={toggle} />;\n    }\n\n    return fallback || null;\n  }\n\n  toggle(e: MouseEvent) {\n    const {audioPlayer} = this.props;\n    e.stopPropagation();\n    audioPlayer.toggle();\n  }\n}\n","import React from 'react';\nimport {Rewind, FastForward, Play} from 'react-feather';\nimport {timestamp} from '../utils';\nimport PlayerButton from './PlayerButton';\nimport AudioPlayer from '../AudioPlayer';\n\ninterface Props {\n  seekAmount: number;\n  audioPlayer: AudioPlayer;\n}\n\nexport default function DesktopPlayer(props: Props) {\n  const {seekAmount, audioPlayer} = props;\n\n  return (\n    <div className='desktop-player' onClick={() => {}}>\n      <Rewind onClick={() => audioPlayer.seekRelative(-seekAmount)} />\n      <PlayerButton audioPlayer={audioPlayer} fallback={<Play />} />\n      <FastForward onClick={() => audioPlayer.seekRelative(+seekAmount)} />\n      <p>{timestamp(audioPlayer.time())}</p>\n      <input\n        className='player-range-bar'\n        type='range'\n        min='0'\n        value={audioPlayer.time()}\n        max={audioPlayer.duration()}\n        step='any'\n        onChange={e => audioPlayer.seekTo(e.target.value as any as number)}\n      />\n      <p>{timestamp(audioPlayer.duration())}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport AudioPlayer from '../AudioPlayer';\n\ninterface Props {\n  audioPlayer: AudioPlayer;\n}\n\nexport default function PlayerBar(props: Props) {\n  const {audioPlayer} = props;\n\n  return (\n    <div className='player-bar' style={{display: audioPlayer.isLoaded() ? 'inherit' : 'none'}}>\n      <div className='player-bar-inner'>\n        <div className='player-bar-progress' style={{width: `${audioPlayer.fraction() * 100}%`}} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Feeds, Settings, EpisodeReference} from '../types';\nimport {episodeImage} from '../utils';\nimport DesktopPlayer from './DesktopPlayer';\nimport PlayerButton from './PlayerButton';\nimport PlayerBar from './PlayerBar';\nimport AudioPlayer from '../AudioPlayer';\nimport './Player.scss';\n\ninterface Props {\n  feeds: Feeds;\n  settings: Settings;\n  openEpisode: (ref: EpisodeReference) => void;\n  audioPlayer: AudioPlayer;\n}\n\nexport default function Player(props: Props) {\n  const {feeds, openEpisode, settings, audioPlayer} = props;\n\n  const epRef = audioPlayer.getEpRef();\n\n  const episode = epRef ? epRef.episode : null;\n\n  const episodeTitle = episode ? episode.title : null;\n  const feedTitle = epRef ? feeds[epRef.feedUrl].data.meta.title : null;\n\n\n  return (\n    <div className='player' onClick={() => (epRef ? openEpisode(epRef) : null)}>\n      <PlayerBar audioPlayer={audioPlayer} />\n      <div className='player-image'>\n        {epRef ? <img src={episodeImage(epRef, feeds)} alt='' /> : null}\n      </div>\n      <div className='player-description'>\n        <div>\n          <p className='player-description-title'>{episodeTitle}</p>\n          <p>{feedTitle}</p>\n        </div>\n      </div>\n      <div className='player-button'>\n        <PlayerButton audioPlayer={audioPlayer} />\n      </div>\n      <DesktopPlayer\n        {...props}\n        audioPlayer={audioPlayer}\n        seekAmount={settings.seekAmount}\n      />\n      <div className='desktop-player-description'>\n        <h2>{episodeTitle}</h2>\n        <h3>{feedTitle}</h3>\n        <p\n          dangerouslySetInnerHTML={{__html: episode ? episode.description : ''}}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, {MouseEvent, ReactElement} from 'react';\n\ninterface Props {\n  icon: ReactElement;\n  text: string;\n  onClick: (e: MouseEvent) => void;\n}\n\nexport default function SideNavItem(props: Props): ReactElement {\n  const {onClick, icon, text} = props;\n\n  return (\n    <div\n      onClick={onClick}\n      className='sidenav-item'\n    >\n      <div className='sidenav-icon'>{icon}</div>\n      <p>{text}</p>\n    </div>\n  );\n}\n","export interface FeedState {data: Feed; time: Date }\nexport type Feeds = Record<string, FeedState>;\n\nexport enum View {\n  Feeds = 'Feeds',\n  Settings = 'Settings',\n  Viewing = 'Viewing',\n  Search = 'Search',\n}\n\nexport interface EpisodeReference {\n  feedUrl: string;\n  episode: Episode;\n}\n\nexport interface Feed {\n  meta: {\n    title: string;\n    description: string;\n    imageURL: string;\n  };\n  episodes: Episode[];\n}\n\nexport interface Episode {\n  title: string;\n  description: string;\n  pubDate: string;\n  enclosure: {\n    length: number;\n    type: string;\n    url: string;\n  };\n  guid: string;\n  duration: string | null;\n  imageURL: string | null;\n}\n\nexport interface Playing {\n  epRef: EpisodeReference;\n  time: number;\n}\n\nexport interface Settings {\n  corsProxy: string;\n  toggle: string;\n  seekBackwards: string;\n  seekForwards: string;\n  seekAmount: number;\n}\n\nexport const DEFAULT_SETTINGS = {\n  corsProxy: 'https://caster-cors-proxy.herokuapp.com',\n  toggle: 'p',\n  seekBackwards: ',',\n  seekForwards: '.',\n  seekAmount: 5\n};\n","import React from 'react';\n\nimport { slide as Slide } from 'react-burger-menu';\nimport {Home, LogOut, Menu, Search, Settings} from 'react-feather';\nimport SideNavItem from './SideNavItem';\nimport {Feeds} from './types';\n\nimport './SideNav.scss';\n\ninterface Props {\n  open: boolean;\n  changeState: (open: boolean) => void;\n  feeds: Feeds;\n  openSettings: () => void;\n  openHome: () => void;\n  openFeed: (url: string) => void;\n  openSearch: () => void;\n  signOut: () => void;\n}\n\nexport default function SideNav(props: Props) {\n  const {\n    open, feeds, openSettings, openHome, openFeed, openSearch, changeState, signOut\n  } = props;\n\n  return (\n    <div className='menu-button'>\n      <Slide\n        isOpen={open}\n        customBurgerIcon={<Menu />}\n        onStateChange={state => changeState(state.isOpen)}\n      >\n        <SideNavItem icon={<Home />} text='Home' onClick={openHome} />\n        <SideNavItem icon={<Search />} text='Search' onClick={openSearch} />\n        {\n        Object.entries(feeds).map(([url, feed]) => (\n          <SideNavItem\n            key={url}\n            icon={<img src={feed.data.meta.imageURL} alt='' />}\n            text={feed.data.meta.title}\n            onClick={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              openFeed(url);\n            }}\n          />\n        ))\n      }\n        <SideNavItem icon={<Settings />} text='Settings' onClick={openSettings} />\n        <SideNavItem icon={<LogOut />} text='Sign Out' onClick={signOut} />\n      </Slide>\n    </div>\n  );\n}\n","import React from 'react';\nimport {FastForward, Pause, Play, Rewind} from 'react-feather';\nimport {EpisodeReference, Feeds, Settings} from '../types';\nimport AudioPlayer from '../AudioPlayer';\nimport {episodeImage, timestamp} from '../utils';\n\nimport './EpisodeView.scss';\n\ninterface Props {\n  epRef: EpisodeReference;\n  feeds: Feeds;\n  playEpisode: (ref: EpisodeReference) => void;\n  audioPlayer: AudioPlayer;\n  settings: Settings;\n}\n\nexport default function EpisodeView(props: Props) {\n  const {epRef, feeds} = props;\n\n  return (\n    <div className='episode-view'>\n      <h1>{epRef.episode.title}</h1>\n      <h2>{feeds[epRef.feedUrl].data.meta.title}</h2>\n      <img src={episodeImage(epRef, feeds)} alt='' />\n      <p dangerouslySetInnerHTML={{__html: epRef.episode.description}} />\n      <Player {...props} />\n    </div>\n  );\n}\n\nfunction Player(props: Props) {\n  const {epRef, audioPlayer, settings} = props;\n  const same = audioPlayer.getEpRef() === epRef;\n  const {seekAmount} = settings;\n\n  if (same) {\n    return (\n      <div className='episode-player'>\n        <p>{timestamp(audioPlayer.time())}</p>\n        <Rewind onClick={() => audioPlayer.seekRelative(-seekAmount)} size='32px' />\n        <PlayButton {...props} />\n        <FastForward onClick={() => audioPlayer.seekRelative(+seekAmount)} size='32px' />\n        <p>{timestamp(audioPlayer.duration())}</p>\n      </div>\n    );\n  }\n  return (\n    <div className='episode-player'>\n      <Rewind size='32px' />\n      <PlayButton {...props} />\n      <FastForward size='32px' />\n    </div>\n  );\n}\n\nfunction PlayButton(props: Props) {\n  const {audioPlayer, playEpisode, epRef} = props;\n\n  if (audioPlayer.getEpRef() === epRef) {\n    if (audioPlayer.isPaused()) {\n      return <Play onClick={() => audioPlayer.toggle()} size='36px' />;\n    }\n    return <Pause onClick={() => audioPlayer.toggle()} size='36px' />;\n  }\n  return <Play onClick={() => playEpisode(epRef)} size='36px' />;\n}\n","import React, { Component, KeyboardEvent } from 'react';\n\ninterface Props {\n  defaultValue?: string;\n  className?: string;\n  placeholder?: string;\n  callback: (value: string) => void;\n}\n\nexport default class TextEntry extends Component<Props, {entered: string}> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {entered: props.defaultValue || ''};\n\n    this.handleKey = this.handleKey.bind(this);\n  }\n\n  render() {\n    const {className, placeholder} = this.props;\n\n    return (\n      <input\n        type='text'\n        value={this.state.entered}\n        className={className}\n        onChange={e => this.setState({entered: e.target.value})}\n        onKeyDown={this.handleKey}\n        placeholder={placeholder}\n      />\n    );\n  }\n\n  handleKey(e: KeyboardEvent) {\n    e.stopPropagation();\n\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    const {entered} = this.state;\n\n    if (entered) {\n      this.setState({entered: ''});\n      this.props.callback(entered);\n    }\n  }\n}\n","import React, {ReactElement} from 'react';\nimport './Item.scss';\n\ninterface Props {\n  image: string;\n  title: string;\n  body: ReactElement | string;\n  onClick?: () => void;\n  icons?: ReactElement;\n  className?: string;\n}\n\nexport default function Item(props: Props) {\n  const {className, onClick, image, title, body, icons} = props;\n\n  return (\n    <div className={`item ${className}`} onClick={onClick}>\n      <div className='item-image'>\n        <img src={image} alt='' />\n      </div>\n      <div className='item-inner'>\n        <h2>{title}</h2>\n        {body}\n      </div>\n      <div className='item-icons'>\n        {icons}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {XCircle} from 'react-feather';\nimport moment from 'moment';\nimport {Feeds} from './types';\nimport Item from './Item';\n\ninterface Props {\n  feeds: Feeds;\n  url: string;\n  openFeed: (url: string) => void;\n  deleteFeed: (url: string) => void;\n}\n\nexport default function FeedItem(props: Props) {\n  const {feeds, url, openFeed, deleteFeed} = props;\n  const feed = feeds[url].data;\n\n  return (\n    <Item\n      title={feed.meta.title}\n      image={feed.meta.imageURL}\n      body={(\n        <>\n          <p>{feed.meta.description}</p>\n          <p>{feed.episodes.length} episodes</p>\n          <p>Last refreshed {moment(feeds[url].time).fromNow()}</p>\n        </>\n    )}\n      onClick={() => openFeed(url)}\n      icons={(\n        <XCircle onClick={e => {\n          e.stopPropagation();\n          deleteFeed(url);\n        }}\n        />\n    )}\n    />\n  );\n}\n","import React from 'react';\nimport {Plus} from 'react-feather';\nimport TextEntry from '../TextEntry';\nimport {Feeds} from '../types';\nimport FeedItem from '../FeedItem';\n\nimport './FeedsView.scss';\n\ninterface Props {\n  feeds: Feeds;\n  openFeed: (url: string) => void;\n  addFeed: (url: string) => void;\n  deleteFeed: (url: string) => void;\n}\n\nexport default function FeedsView(props: Props) {\n  const {feeds, addFeed} = props;\n\n  return (\n    <>\n      {\n        Object.keys(feeds).map(url => <FeedItem key={url} url={url} {...props} />)\n      }\n      <div className='add-feed'>\n        <Plus />\n        <TextEntry placeholder='Podcast Feed URL' callback={addFeed} />\n      </div>\n    </>\n  );\n}\n","import moment from 'moment';\nimport React from 'react';\nimport {MoreHorizontal, Play} from 'react-feather';\nimport Item from './Item';\nimport {EpisodeReference, Feeds} from './types';\nimport {episodeImage} from './utils';\n\ninterface Props {\n  episode: EpisodeReference;\n  feeds: Feeds;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\nexport default function EpisodeItem(props: Props) {\n  const {episode, feeds, openEpisode, playEpisode} = props;\n\n  return (\n    <Item\n      title={episode.episode.title}\n      image={episodeImage(episode, feeds)}\n      body={moment(episode.episode.pubDate).format('L LT')}\n      icons={(\n        <>\n          <Play onClick={() => playEpisode(episode)} />\n          <MoreHorizontal onClick={() => openEpisode(episode)} />\n        </>\n      )}\n      className='episode'\n    />\n  );\n}\n","import React, {PureComponent} from 'react';\n\nimport EpisodeItem from '../EpisodeItem';\nimport {EpisodeReference, Feeds} from '../types';\n\ninterface Props {\n  feeds: Feeds;\n  feedUrl: string;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\nexport default class FeedView extends PureComponent<Props> {\n  render() {\n    const {feeds, feedUrl} = this.props;\n\n    return feeds[feedUrl].data.episodes.map(episode => (\n      <EpisodeItem\n        key={episode.guid}\n        episode={{episode, feedUrl}}\n        {...this.props}\n      />\n    ));\n  }\n}\n","import fuzzysort from 'fuzzysort';\nimport React, {PureComponent} from 'react';\nimport {Search} from 'react-feather';\nimport EpisodeItem from '../EpisodeItem';\nimport {EpisodeReference, Feeds} from '../types';\n\nimport './SearchView.scss';\n\ninterface Props {\n  feeds: Feeds;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\ninterface State {\n  searchTerm: string;\n}\n\nexport default class SearchView extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      searchTerm: ''\n    };\n  }\n\n  render() {\n    const {feeds} = this.props;\n\n    const episodes = Object.keys(feeds)\n      .flatMap(feedUrl => feeds[feedUrl].data.episodes.map(episode => ({\n        ref: {episode, feedUrl},\n        episodeTitle: episode.title,\n        episodeDescription: episode.description\n      })));\n\n    const options = {\n      limit: 50,\n      keys: ['episodeTitle', 'episodeDescription'],\n      threshold: -500\n    };\n\n    const renderedEpisodes = fuzzysort.go(this.state.searchTerm, episodes, options)\n      .map(result => (\n        <EpisodeItem\n          key={result.obj.ref.episode.guid}\n          episode={result.obj.ref}\n          {...this.props}\n        />\n      ));\n\n    return (\n      <div className='search'>\n        <div className='search-body'>\n          {renderedEpisodes.length ? renderedEpisodes : <h1>No Search Term Entered</h1>}\n        </div>\n        <div className='search-input'>\n          <Search />\n          <input\n            type='text'\n            placeholder='Search Term'\n            onChange={e => this.setState({searchTerm: e.target.value})}\n            value={this.state.searchTerm}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component, ReactElement} from 'react';\nimport {RotateCcw} from 'react-feather';\n\nimport isUrl from 'is-url-superb';\nimport {DEFAULT_SETTINGS, Settings} from '../types';\n\n\nimport './SettingsView.scss';\n\ninterface Props {\n  settings: Settings;\n  updateSettings: (updates: object, valid: boolean) => void;\n}\n\nexport default class SettingsView extends Component<Props> {\n  render(): ReactElement {\n    const {settings, updateSettings} = this.props;\n    const {corsProxy, toggle, seekBackwards, seekForwards} = settings;\n\n    const helpUrl = 'https://devcenter.heroku.com/articles/getting-started-with-nodejs';\n    const defaultUrl = 'https://caster-cors-proxy.herokuapp.com';\n    const corsAnywhere = 'https://caster-cors-proxy.herokuapp.com';\n\n    return (\n      <div className='settings'>\n        <p>Many websites do not allow you to request RSS feeds from inside a browser, so you need to use a proxy to access them. I've set up {defaultUrl} which you are totally free to use, but if you want to setup a proxy yourself you can follow <a href={helpUrl}>this guide</a> with the <a href={corsAnywhere}>CORS Anywhere</a>.</p>\n        <label>CORS Proxy:</label>\n        <input\n          type='url'\n          pattern='https?://.*'\n          value={corsProxy}\n          onChange={e => this.updateProxy(e.target.value)}\n          style={style(isUrl(corsProxy))}\n        />\n        <label>Pause/Play Toggle:</label>\n        <input\n          type='text'\n          value={toggle}\n          style={style(fixCharacter(toggle)[1])}\n          onChange={e => this.updateCharacter('toggle', e.target.value)}\n        />\n        <label>Seek Backwards:</label>\n        <input\n          type='text'\n          value={seekBackwards}\n          style={style(fixCharacter(seekBackwards)[1])}\n          onChange={e => this.updateCharacter('seekBackwards', e.target.value)}\n        />\n        <label>Seek Forwards:</label>\n        <input\n          type='text'\n          value={seekForwards}\n          style={style(fixCharacter(seekForwards)[1])}\n          onChange={e => this.updateCharacter('seekForwards', e.target.value)}\n        />\n        <button\n          type='reset'\n          onClick={() => updateSettings(DEFAULT_SETTINGS, true)}\n        >\n          <RotateCcw />\n        Reset\n        </button>\n      </div>\n    );\n  }\n\n  updateProxy(url: string) {\n    this.props.updateSettings({corsProxy: url}, isUrl(url));\n  }\n\n  updateCharacter(key: string, string: string) {\n    const [character, valid] = fixCharacter(string);\n    this.props.updateSettings({[key]: character}, valid);\n  }\n}\n\nfunction fixCharacter(characters: string): [string, boolean] {\n  if (characters.length > 0) {\n    return [characters[characters.length - 1].toLowerCase(), true];\n  }\n  return ['', false];\n}\n\nfunction style(valid: boolean): {border: string} {\n  return {\n    border: `1px solid ${valid ? 'green' : 'red'}`\n  };\n}\n","import {EpisodeReference, Feeds, Playing} from './types';\nimport {episodeImage} from './utils';\n\nexport default class AudioPlayer {\n  audio: HTMLAudioElement;\n\n  epRef: EpisodeReference | null;\n\n  timer: number | null;\n\n  syncTimer: number | null;\n\n  refresh: () => void;\n\n  syncCallback: (playing: Playing) => void;\n\n  constructor(refresh: () => void, syncCallback: (playing: Playing) => void) {\n    this.audio = document.createElement('audio');\n    this.epRef = null;\n    this.timer = null;\n    this.syncTimer = null;\n    this.refresh = refresh;\n    this.syncCallback = syncCallback;\n\n    if (navigator.mediaSession) {\n      navigator.mediaSession.setActionHandler('play',  this.play.bind(this));\n      navigator.mediaSession.setActionHandler('pause', this.pause.bind(this));\n      // todo: allow seek times to change\n      navigator.mediaSession.setActionHandler('seekbackward', () => this.seekRelative(-5));\n      navigator.mediaSession.setActionHandler('seekforward',  () => this.seekRelative(+5));\n    }\n  }\n\n  getEpRef(): EpisodeReference | null {\n    return this.epRef;\n  }\n\n  loadEp(epRef: EpisodeReference, feeds: Feeds, playing: boolean, time: number) {\n    this.audio.src = epRef.episode.enclosure.url;\n    this.epRef = epRef;\n    this.audio.currentTime = time;\n\n    if (playing) {\n      this.playNoCallback();\n    } else {\n      this.pauseNoCallback();\n    }\n\n    if (navigator.mediaSession) {\n      const {meta} = feeds[epRef.feedUrl].data;\n\n      navigator.mediaSession.metadata = new MediaMetadata({\n        title: epRef.episode.title,\n        album: meta.title,\n        artwork: [{src: episodeImage(epRef, feeds)}]\n      });\n    }\n\n\n    this.refresh();\n  }\n\n  isLoaded(): boolean {\n    return this.getEpRef() !== null;\n  }\n\n  isPaused(): boolean {\n    return this.audio.paused;\n  }\n\n  isPlaying(): boolean {\n    return !this.audio.paused;\n  }\n\n  toggle() {\n    if (this.audio.paused) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  }\n\n  sync() {\n    if (this.epRef !== null) this.syncCallback({epRef: this.epRef, time: this.time()});\n  }\n\n  playNoCallback() {\n    this.audio.play();\n\n    if (navigator.mediaSession) navigator.mediaSession.playbackState = 'playing';\n\n    this.timer = window.setInterval(this.refresh, 100);\n    this.syncTimer = window.setInterval(this.sync, 30 * 1000);\n  }\n\n  pauseNoCallback() {\n    this.audio.pause();\n\n    if (navigator.mediaSession) navigator.mediaSession.playbackState = 'paused';\n\n    if (this.timer !== null) {\n      window.clearInterval(this.timer);\n      this.timer = null;\n    }\n\n    if (this.syncTimer !== null) {\n      window.clearInterval(this.syncTimer);\n      this.syncTimer = null;\n    }\n  }\n\n  play() {\n    this.playNoCallback();\n    this.refresh();\n  }\n\n  pause() {\n    this.pauseNoCallback();\n    this.refresh();\n    this.sync();\n  }\n\n  time(): number {\n    return this.audio.currentTime;\n  }\n\n  fraction(): number {\n    return this.time() / this.duration();\n  }\n\n  duration(): number {\n    return this.audio.duration || 0;\n  }\n\n  seekTo(time: number) {\n    this.audio.currentTime = time;\n    this.refresh();\n  }\n\n  seekRelative(value: number) {\n    this.seekTo(this.audio.currentTime + value);\n  }\n}\n","import {UserSession} from 'blockstack';\nimport update from 'immutability-helper';\nimport React, {Component, ReactElement} from 'react';\nimport {RefreshCw, DownloadCloud} from 'react-feather';\nimport { Textfit } from 'react-textfit';\nimport Hotkeys from 'react-hot-keys';\n\nimport Player from './Player';\nimport SideNav from './SideNav';\nimport {DEFAULT_SETTINGS, EpisodeReference, Feeds, Playing, Settings, View} from './types';\nimport {loadData, requestPodcast, saveData} from './utils';\nimport EpisodeView from './views/EpisodeView';\nimport FeedsView from './views/FeedsView';\nimport FeedView from './views/FeedView';\nimport SearchView from './views/SearchView';\nimport SettingsView from './views/SettingsView';\nimport AudioPlayer from './AudioPlayer';\n\nimport './Dashboard.scss';\n\nconst FEEDS_FILENAME = 'feeds.json';\nconst SETTINGS_FILENAME = 'settings.json';\nconst PLAYING_FILENAME = 'playing.json';\n\ninterface Props {\n  userSession: UserSession;\n  signOut: () => (void);\n}\n\ninterface State {\n  feeds: Feeds;\n  view: View;\n  viewing: string | EpisodeReference | undefined;\n  settings: Settings;\n  sidenavOpen: boolean;\n}\n\nexport default class Dashboard extends Component<Props, State> {\n  saveTimer: NodeJS.Timer | null = null;\n\n  audioPlayer: AudioPlayer;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      // Main State\n      feeds: {},\n      settings: DEFAULT_SETTINGS,\n      view: View.Feeds,\n      viewing: undefined,\n      sidenavOpen: false\n    };\n\n    this.refresh = this.refresh.bind(this);\n    this.addFeed = this.addFeed.bind(this);\n    this.openEpisode = this.openEpisode.bind(this);\n    this.playEpisode = this.playEpisode.bind(this);\n    this.deleteFeed = this.deleteFeed.bind(this);\n    this.updateSettings = this.updateSettings.bind(this);\n    this.sync = this.sync.bind(this);\n\n    this.audioPlayer = new AudioPlayer(\n      // Callback to refresh dashboard. Possibly hackier than it needs to be.\n      () => this.setState({}),\n      playing => this.savePlaying(playing)\n    );\n  }\n\n  render() {\n    return (\n      <Hotkeys\n        keyName='*'\n        onKeyDown={(_key, e, _handle) => this.handleKey(e.key)}\n      >\n        <div className='dashboard'>\n          <div className='titlebar'>\n            <SideNav\n              open={this.state.sidenavOpen}\n              feeds={this.state.feeds}\n              openHome={() => this.setState({view: View.Feeds, sidenavOpen: false})}\n              openFeed={viewing => this.setState({view: View.Viewing, viewing, sidenavOpen: false})}\n              openSettings={() => this.setState({view: View.Settings, sidenavOpen: false})}\n              openSearch={() => this.setState({view: View.Search, sidenavOpen: false})}\n              changeState={open => this.setState({sidenavOpen: open})}\n              signOut={this.props.signOut}\n            />\n            <div className='title'>\n              <Textfit>\n                <p className='title-text'>{this.title()}</p>\n              </Textfit>\n            </div>\n            <div className='resync-button' title='Redownload podcast data'>\n              <DownloadCloud onClick={this.sync} />\n            </div>\n            <div className='refresh-button' title='Refresh the feeds'>\n              <RefreshCw onClick={this.refresh} />\n            </div>\n          </div>\n          <div className='main'>{this.inner()}</div>\n          <Player\n            {...this.state}\n            {...this}\n          />\n        </div>\n      </Hotkeys>\n    );\n  }\n\n  handleKey(key: string) {\n    const {toggle, seekBackwards, seekForwards, seekAmount} = this.state.settings;\n\n    if (key === toggle) {\n      this.audioPlayer.toggle();\n    }\n\n    if (key === seekBackwards) {\n      this.audioPlayer.seekRelative(-seekAmount);\n    }\n\n    if (key === seekForwards) {\n      this.audioPlayer.seekRelative(+seekAmount);\n    }\n  }\n\n  updateSettings(updates: Partial<Settings>, valid: boolean) {\n    this.setState(\n      {settings: update(this.state.settings, {$merge: updates})},\n      () => (valid ? this.saveSettings() : null)\n    );\n  }\n\n  title(): string {\n    const {view, viewing, feeds} = this.state;\n\n    if (view === View.Feeds) {\n      return 'Podcasts';\n    } if (view === View.Settings) {\n      return 'Settings';\n    } if (view === View.Search) {\n      return 'Search';\n    } if (view === View.Viewing) {\n      if (typeof viewing === 'string') {\n        return feeds[viewing].data.meta.title;\n      } if (typeof viewing !== 'undefined') {\n        return viewing.episode.title;\n      }\n      console.error('View set to viewing but this.state.viewing is undefined');\n      return '';\n    }\n    console.log(`View ${view} not handled in title()`);\n    return '';\n  }\n\n  inner(): ReactElement | ReactElement[] {\n    const {feeds, view, viewing, settings} = this.state;\n\n    if (view === View.Feeds) {\n      return (\n        <FeedsView\n          feeds={feeds}\n          openFeed={feed => this.setState({viewing: feed, view: View.Viewing})}\n          {...this}\n        />\n      );\n    } if (view === View.Settings) {\n      return (\n        <SettingsView\n          settings={settings}\n          updateSettings={this.updateSettings}\n        />\n      );\n    } if (view === View.Viewing) {\n      if (typeof viewing === 'string') {\n        return (\n          <FeedView\n            feeds={feeds}\n            {...this}\n            feedUrl={viewing}\n          />\n        );\n      } if (typeof viewing !== 'undefined') {\n        return (\n          <EpisodeView\n            epRef={viewing}\n            {...this.state}\n            {...this}\n          />\n        );\n      }\n      const error = 'View set to viewing but this.state.viewing is undefined';\n      console.error(error);\n      return <p>{error}</p>;\n    } if (view === View.Search) {\n      return (\n        <SearchView\n          feeds={feeds}\n          {...this}\n        />\n      );\n    }\n    const error = `View ${view} not handled in inner()`;\n    console.error(error);\n    return <p>{error}</p>;\n  }\n\n  playEpisode(epRef: EpisodeReference) {\n    const {feeds} = this.state;\n    this.audioPlayer.loadEp(epRef, feeds, true, 0);\n  }\n\n  async refresh() {\n    await Promise.all(Object.keys(this.state.feeds).map(this.addFeed));\n    this.saveFeeds();\n  }\n\n  deleteFeed(url: string) {\n    const feeds = update(\n      this.state.feeds,\n      {$unset: [url]}\n    );\n\n    this.setState({feeds}, this.saveFeeds);\n  }\n\n  openEpisode(viewing: EpisodeReference) {\n    this.setState({viewing, view: View.Viewing});\n  }\n\n  clearFeeds() {\n    this.setState({feeds: {}}, this.saveFeeds);\n  }\n\n  async addFeed(url: string) {\n    return requestPodcast(this.state.settings.corsProxy, url)\n      .then(data => {\n        const feeds = update(\n          this.state.feeds,\n          { $merge: {[url]: {time: Date.now(), data}} }\n        );\n        return this.setState({feeds});\n      })\n      .then(() => this.saveFeeds());\n  }\n\n  saveFeeds() {\n    saveData(this.props.userSession, FEEDS_FILENAME, this.state.feeds);\n  }\n\n  saveSettings() {\n    saveData(this.props.userSession, SETTINGS_FILENAME, this.state.settings);\n  }\n\n  savePlaying(playing: Playing | undefined) {\n    saveData(this.props.userSession, PLAYING_FILENAME, playing);\n  }\n\n  sync() {\n    const {userSession} = this.props;\n\n    loadData<Feeds>(userSession, FEEDS_FILENAME)\n      .then(feeds => this.setState({feeds}))\n      .then(() => loadData<Playing | undefined>(userSession, PLAYING_FILENAME))\n      .then(playing => {\n        if (playing) {\n          const {feeds} = this.state;\n          this.audioPlayer.loadEp(playing.epRef, feeds, false, playing.time);\n        }\n      });\n\n    loadData<Settings>(userSession, SETTINGS_FILENAME)\n      .then(settings => this.setState({\n        // Merge in settings (convenient because it allows me to update whats in settings)\n        settings: update(this.state.settings, {$merge: settings})\n      }));\n  }\n\n  componentDidMount() {\n    this.sync();\n  }\n}\n"],"sourceRoot":""}