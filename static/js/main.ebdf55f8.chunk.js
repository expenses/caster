(window.webpackJsonpCaster=window.webpackJsonpCaster||[]).push([[1],{12:function(e,n,t){e.exports=t(27)},18:function(e,n,t){},21:function(e,n){},22:function(e,n){},23:function(e,n){},26:function(e,n,t){},27:function(e,n,t){"use strict";t.r(n);var a=t(3),o=t(4),r=t(6),i=t(5),c=t(7),s=t(2),l=(t(13),t(0)),u=t.n(l),d=t(10),f=t.n(d),g=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function m(e,n){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var t=e.installing;null!=t&&(t.onstatechange=function(){"installed"===t.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA."),n&&n.onUpdate&&n.onUpdate(e)):(console.log("Content is cached for offline use."),n&&n.onSuccess&&n.onSuccess(e)))})}})).catch((function(e){console.error("Error during service worker registration:",e)}))}var h=t(29),p=t(30);t(18);function w(e){return u.a.createElement("picture",{className:e.className},u.a.createElement("source",{srcSet:"".concat(e.src,".webp"),type:"image/webp"}),u.a.createElement("source",{srcSet:"".concat(e.src,".png"),type:"image/png"}),u.a.createElement("img",{src:"".concat(e.src,".png"),alt:""}))}function y(e){var n=e.signIn,t=e.tryAnonymously,a=u.a.createElement("a",{href:"https://blockstack.org/"},"Blockstack");return u.a.createElement("div",{className:"signin"},u.a.createElement("div",{className:"signin-inner"},u.a.createElement("h1",null,"Caster is a encrypted, decentralised, syncing podcast player"),u.a.createElement("p",null,"(That's a mouthful)"),u.a.createElement("div",{className:"intro"},u.a.createElement(w,{className:"intro-image",src:"mobile_30_08_2019"}),u.a.createElement("div",{className:"intro-text"},u.a.createElement("h2",null,"Here's how it works:"),u.a.createElement("p",null,"You can try out Caster by clicking the button below. In order to sync podcasts though, you'll need a ",a," identity. Making one is the same as signing up for any other online account, a process you've probably done hundreds of times."),u.a.createElement("p",null,"This will provide you with a ",u.a.createElement("a",{href:"https://blockstack.org/try-blockstack"},"universal login")," which you can use to access any Blockstack app. You'll also get a private encryption key, which is used to encrypt infomation about your podcast feeds."),u.a.createElement("button",{onClick:n,type:"button"},u.a.createElement(h.a,null),"Create ID/Log In"),u.a.createElement("button",{onClick:t,type:"button"},u.a.createElement(p.a,null),"Try without making an ID")))))}t(21),t(22),t(23),t(24),t(25),t(26);s.locale(window.navigator.language);var v=u.a.lazy((function(){return Promise.all([t.e(0),t.e(4),t.e(6)]).then(t.bind(null,682))})),b=function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(r.a)(this,Object(i.a)(n).call(this,e))).state={anonymous:!1,userSession:null,appConfig:null},t}return Object(c.a)(n,e),Object(o.a)(n,[{key:"render",value:function(){var e=this,n=this.state,t=n.userSession,a=n.anonymous,o=n.appConfig;return t&&t.isUserSignedIn()||a?u.a.createElement(l.Suspense,{fallback:u.a.createElement(u.a.Fragment,null)},u.a.createElement(v,{userSession:t,signOut:function(){return t&&o?t.signUserOut(o.redirectURI()):null}})):u.a.createElement(y,{signIn:function(){return t?t.redirectToSignIn():null},tryAnonymously:function(){return e.setState({anonymous:!0})}})}},{key:"componentDidMount",value:function(){var e=this;Promise.all([t.e(0),t.e(3),t.e(7)]).then(t.t.bind(null,681,7)).then((function(n){var t=new n.AppConfig;t.manifestPath="/caster/manifest.json",t.redirectPath="/caster",console.log("Manifest path: ".concat(t.manifestURI())),console.log("Redirect path: ".concat(t.redirectURI()));var a=new n.UserSession({appConfig:t});a.isSignInPending()&&a.handlePendingSignIn().then((function(){window.location.href=t.redirectURI()})),e.setState({userSession:a,appConfig:t})}))}}]),n}(l.Component);f.a.render(u.a.createElement(b,null),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("/caster",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(function(){var n="".concat("/caster","/service-worker.js");g?(!function(e,n){fetch(e).then((function(t){var a=t.headers.get("content-type");404===t.status||null!=a&&-1===a.indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):m(e,n)})).catch((function(){console.log("No internet connection found. App is running in offline mode.")}))}(n,e),navigator.serviceWorker.ready.then((function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA")}))):m(n,e)}))}}()}},[[12,2,5]]]);
//# sourceMappingURL=main.ebdf55f8.chunk.js.map