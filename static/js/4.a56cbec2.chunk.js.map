{"version":3,"sources":["Dashboard/utils.tsx","Dashboard/Player/PlayerButton.tsx","Dashboard/Player/DesktopPlayer.tsx","Dashboard/Player/PlayerBar.tsx","Dashboard/Player/index.tsx","Dashboard/SideNavItem.tsx","Dashboard/types.tsx","Dashboard/SideNav.tsx","Dashboard/views/EpisodeView.tsx","Dashboard/TextEntry.tsx","Dashboard/Item.tsx","Dashboard/FeedItem.tsx","Dashboard/views/FeedsView.tsx","Dashboard/EpisodeItem.tsx","Dashboard/views/FeedView.tsx","Dashboard/views/SearchView.tsx","Dashboard/views/SettingsView.tsx","Dashboard/index.tsx"],"names":["options","fields","meta","episodes","required","requestPodcast","proxy","url","a","console","log","combined","endsWith","getPodcastFromURL","saveData","userSession","filename","data","putFile","JSON","stringify","loadData","getFile","then","content","ArrayBuffer","parse","episodeImage","ref","feeds","episode","imageURL","feedUrl","timestamp","secs","hours","Math","floor","minutes","seconds","pad","value","toString","padStart","PlayerButton","this","props","playing","fallback","paused","onClick","e","setPaused","updatePlaying","stopPropagation","Component","DesktopPlayer","duration","seek","seekAmount","time","className","type","min","max","step","onChange","target","PlayerBar","percentage","style","display","width","Player","endPlaying","openEpisode","setDuration","settings","epRef","episodeTitle","title","feedTitle","src","alt","dangerouslySetInnerHTML","__html","description","enclosure","undefined","listenInterval","onListen","onLoad","audio","onEnded","relative","SideNavItem","icon","text","View","SideNav","open","openSettings","openHome","openFeed","openSearch","changeState","signOut","isOpen","customBurgerIcon","onStateChange","state","Object","entries","map","feed","key","preventDefault","DEFAULT_SETTINGS","corsProxy","toggle","seekBackwards","seekForwards","EpisodeView","player","playingDuration","same","size","button","playEpisode","TextEntry","entered","defaultValue","handleKey","bind","setState","onKeyDown","placeholder","callback","Item","image","body","icons","FeedItem","deleteFeed","length","moment","fromNow","FeedsView","addFeed","keys","EpisodeItem","pubDate","format","FeedView","guid","PureComponent","SearchView","searchTerm","flatMap","episodeDescription","renderedEpisodes","fuzzysort","go","limit","threshold","result","obj","SettingsView","updateSettings","href","pattern","updateProxy","isUrl","fixCharacter","updateCharacter","string","character","valid","characters","toLowerCase","border","Dashboard","saveTimer","view","Feeds","viewing","sidenavOpen","refresh","savePlaying","keyName","_key","_handle","Viewing","Settings","Search","sync","inner","_prevProps","prevState","statePlaying","setInterval","clearInterval","updates","update","$merge","saveSettings","error","Promise","all","saveFeeds","$unset","Date","now"],"mappings":"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","file":"static/js/4.a56cbec2.chunk.js","sourcesContent":["import {UserSession} from 'blockstack';\nimport {getPodcastFromURL} from 'podcast-feed-parser';\nimport {EpisodeReference, Feed, Feeds} from './types';\n\n// https://github.com/jbierfeldt/podcast-feed-parser/blob/master/index.js#L17\nconst options = {\n  fields: {\n    meta: ['title', 'description', 'imageURL'],\n    episodes: ['title', 'description', 'imageURL', 'pubDate', 'enclosure', 'duration', 'guid']\n  },\n\n  required: {\n    meta: ['title', 'description'],\n    episodes: []\n  }\n};\n\nexport async function requestPodcast(proxy: string, url: string): Promise<Feed> {\n  console.log(`Requesting '${url}' via '${proxy}'`);\n  const combined = proxy.endsWith('/') ? proxy + url : `${proxy}/${url}`;\n  return getPodcastFromURL(combined, options);\n}\n\nexport function saveData<T>(userSession: UserSession, filename: string, data: T): Promise<string> {\n  return userSession.putFile(filename, JSON.stringify(data), {});\n}\n\nexport async function loadData<T>(userSession: UserSession, filename: string): Promise<T> {\n  return userSession.getFile(filename, {})\n    .then(content => {\n      if (content instanceof ArrayBuffer) {\n        // todo: error\n        return {};\n      }\n      return JSON.parse(content) || {};\n    });\n}\n\nexport function episodeImage(ref: EpisodeReference, feeds: Feeds): string {\n  return ref.episode.imageURL || feeds[ref.feedUrl].data.meta.imageURL;\n}\n\nexport function timestamp(secs: number): string {\n  const hours = Math.floor(secs / 3600);\n  const minutes = Math.floor((secs - (hours * 3600)) / 60);\n  const seconds = Math.floor(secs % 60);\n\n  return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n}\n\nfunction pad(value: number): string {\n  return value.toString().padStart(2, '0');\n}\n","import React, {Component, MouseEvent, ReactElement} from 'react';\nimport {Play, Pause} from 'react-feather';\nimport {Playing} from '../types';\n\ninterface Props {\n  playing: Playing | undefined;\n  updatePlaying: (updates: Partial<Playing>) => void;\n  fallback?: ReactElement;\n}\n\nexport default class PlayerButton extends Component<Props> {\n  render() {\n    const {playing, fallback} = this.props;\n\n    if (playing) {\n      if (playing.paused) {\n        return <Play onClick={e => this.setPaused(e, false)} />;\n      }\n      return <Pause onClick={e => this.setPaused(e, true)} />;\n    }\n\n    return fallback || null;\n  }\n\n  setPaused(e: MouseEvent, paused: boolean) {\n    const {updatePlaying} = this.props;\n    e.stopPropagation();\n    updatePlaying({paused});\n  }\n}\n","import React from 'react';\nimport {Rewind, FastForward, Play} from 'react-feather';\nimport {Playing} from '../types';\nimport {timestamp} from '../utils';\nimport PlayerButton from './PlayerButton';\n\ninterface Props {\n  playing: Playing | undefined;\n  duration: number | undefined;\n  seek: (amount: number) => void;\n  updatePlaying: (updates: Partial<Playing>) => void;\n  seekAmount: number;\n}\n\nexport default function DesktopPlayer(props: Props) {\n  const {playing, duration, seek, updatePlaying, seekAmount} = props;\n  const time = playing ? playing.time : 0;\n\n  return (\n    <div className='desktop-player'>\n      <Rewind onClick={() => seek(-seekAmount)} />\n      <PlayerButton playing={playing} updatePlaying={updatePlaying} fallback={<Play />} />\n      <FastForward onClick={() => seek(+seekAmount)} />\n      <p>{timestamp(time)}</p>\n      <input\n        className='player-range-bar'\n        type='range'\n        min='0'\n        value={time}\n        max={duration || 0}\n        step='any'\n        onChange={e => updatePlaying({time: e.target.value as any as number})}\n      />\n      <p>{timestamp(duration || 0)}</p>\n    </div>\n  );\n}\n","import React from 'react';\n\ninterface Props {\n  time: number;\n  duration: number | undefined;\n}\n\nexport default function PlayerBar(props: Props) {\n  const {time, duration} = props;\n\n  let percentage = 0;\n\n  if (duration) {\n    const fraction = time / duration;\n    percentage = fraction * 100;\n  }\n\n  return (\n    <div className='player-bar' style={{display: duration ? 'inherit' : 'none'}}>\n      <div className='player-bar-inner'>\n        <div className='player-bar-progress' style={{width: `${percentage}%`}} />\n      </div>\n    </div>\n  );\n}\n","import React, {Component} from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport {Feeds, Playing, Settings, EpisodeReference} from '../types';\nimport {episodeImage} from '../utils';\nimport DesktopPlayer from './DesktopPlayer';\nimport PlayerButton from './PlayerButton';\nimport PlayerBar from './PlayerBar';\nimport './Player.scss';\n\ninterface Props {\n  playing: Playing | undefined;\n  feeds: Feeds;\n  duration: number | undefined;\n  updatePlaying: (updates: Partial<Playing>) => void;\n  setDuration: (duration: number) => void;\n  endPlaying: () => void;\n  settings: Settings;\n  openEpisode: (ref: EpisodeReference) => void;\n}\n\nexport default class Player extends Component<Props> {\n  render() {\n    const {playing, feeds, updatePlaying, duration, endPlaying, openEpisode, setDuration, settings} = this.props;\n\n    // Eww\n    const paused = playing ? playing.paused : true;\n    const epRef = playing ? playing.epRef : null;\n    const episode = epRef ? epRef.episode : null;\n\n    const time = playing ? playing.time : 0;\n    const episodeTitle = episode ? episode.title : null;\n    const feedTitle = epRef ? feeds[epRef.feedUrl].data.meta.title : null;\n\n    return (\n      <div className='player' onClick={() => (epRef ? openEpisode(epRef) : null)}>\n        <PlayerBar time={time} duration={duration} />\n        <div className='player-image'>\n          {epRef ? <img src={episodeImage(epRef, this.props.feeds)} alt='' /> : null}\n        </div>\n        <div className='player-description'>\n          <div>\n            <p className='player-description-title'>{episodeTitle}</p>\n            <p>{feedTitle}</p>\n          </div>\n        </div>\n        <div className='player-button'>\n          <PlayerButton playing={playing} updatePlaying={updatePlaying} />\n        </div>\n        <DesktopPlayer\n          playing={playing}\n          duration={duration}\n          seek={this.seek}\n          updatePlaying={updatePlaying}\n          seekAmount={settings.seekAmount}\n        />\n        <div className='desktop-player-description'>\n          <h2>{episodeTitle}</h2>\n          <h3>{feedTitle}</h3>\n          <p\n            dangerouslySetInnerHTML={{__html: episode ? episode.description : ''}}\n          />\n        </div>\n        <ReactAudioPlayer\n          time={time}\n          playing={!paused}\n          src={episode ? episode.enclosure.url : undefined}\n          listenInterval={100}\n          onListen={(time: number) => updatePlaying({time})}\n          onLoad={audio => setDuration(audio.duration)}\n          onEnded={endPlaying}\n          title={episodeTitle || undefined}\n        />\n      </div>\n    );\n  }\n\n  seek(relative: number) {\n    const {playing, updatePlaying} = this.props;\n\n    if (playing) {\n      updatePlaying({time: playing.time + relative});\n    }\n  }\n}\n","import React, {MouseEvent, ReactElement} from 'react';\n\ninterface Props {\n  icon: ReactElement;\n  text: string;\n  onClick: (e: MouseEvent) => void;\n}\n\nexport default function SideNavItem(props: Props): ReactElement {\n  const {onClick, icon, text} = props;\n\n  return (\n    <div\n      onClick={onClick}\n      className='sidenav-item'\n    >\n      <div className='sidenav-icon'>\n        {icon}\n      </div>\n      <p>{text}</p>\n    </div>\n  );\n}\n","export interface FeedState {data: Feed; time: Date }\nexport type Feeds = Record<string, FeedState>;\n\nexport enum View {\n  Feeds = 'Feeds',\n  Settings = 'Settings',\n  Viewing = 'Viewing',\n  Search = 'Search',\n}\n\nexport interface EpisodeReference {\n  feedUrl: string;\n  episode: Episode;\n}\n\nexport interface Feed {\n  meta: {\n    title: string;\n    description: string;\n    imageURL: string;\n  };\n  episodes: Episode[];\n}\n\nexport interface Episode {\n  title: string;\n  description: string;\n  pubDate: string;\n  enclosure: {\n    length: number;\n    type: string;\n    url: string;\n  };\n  guid: string;\n  duration: string | null;\n  imageURL: string | null;\n}\n\nexport interface Playing {\n  epRef: EpisodeReference;\n  time: number;\n  paused: boolean;\n}\n\nexport interface Settings {\n  corsProxy: string;\n  toggle: string;\n  seekBackwards: string;\n  seekForwards: string;\n  seekAmount: number;\n}\n\nexport const DEFAULT_SETTINGS = {\n  corsProxy: 'https://caster-cors-proxy.herokuapp.com',\n  toggle: 'p',\n  seekBackwards: ',',\n  seekForwards: '.',\n  seekAmount: 5\n};\n","import React from 'react';\n\nimport { slide as Slide } from 'react-burger-menu';\nimport {Home, LogOut, Menu, Search, Settings} from 'react-feather';\nimport SideNavItem from './SideNavItem';\nimport {Feeds} from './types';\n\nimport './SideNav.scss';\n\ninterface Props {\n  open: boolean;\n  changeState: (open: boolean) => void;\n  feeds: Feeds;\n  openSettings: () => void;\n  openHome: () => void;\n  openFeed: (url: string) => void;\n  openSearch: () => void;\n  signOut: () => void;\n}\n\nexport default function SideNav(props: Props) {\n  const {\n    open, feeds, openSettings, openHome, openFeed, openSearch, changeState, signOut\n  } = props;\n\n  return (\n    <div className='menu-button'>\n      <Slide\n        isOpen={open}\n        customBurgerIcon={<Menu />}\n        onStateChange={state => changeState(state.isOpen)}\n      >\n        <SideNavItem icon={<Home />} text='Home' onClick={openHome} />\n        <SideNavItem icon={<Search />} text='Search' onClick={openSearch} />\n        {\n        Object.entries(feeds).map(([url, feed]) => (\n          <SideNavItem\n            key={url}\n            icon={<img src={feed.data.meta.imageURL} alt='' />}\n            text={feed.data.meta.title}\n            onClick={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              openFeed(url);\n            }}\n          />\n        ))\n      }\n        <SideNavItem icon={<Settings />} text='Settings' onClick={openSettings} />\n        <SideNavItem icon={<LogOut />} text='Sign Out' onClick={signOut} />\n      </Slide>\n    </div>\n  );\n}\n","import React, {Component, ReactElement} from 'react';\nimport {FastForward, Pause, Play, Rewind} from 'react-feather';\nimport {EpisodeReference, Feeds, Playing, Settings} from '../types';\nimport {episodeImage, timestamp} from '../utils';\n\nimport './EpisodeView.scss';\n\ninterface Props {\n  epRef: EpisodeReference;\n  feeds: Feeds;\n  playEpisode: (ref: EpisodeReference) => void;\n  playing: Playing | undefined;\n  playingDuration: number | undefined;\n  updatePlaying: (updates: object) => void;\n  settings: Settings;\n}\n\nexport default class EpisodeView extends Component<Props> {\n  render() {\n    const {epRef, feeds} = this.props;\n\n    return (\n      <div className='episode-view'>\n        <h1>{epRef.episode.title}</h1>\n        <h2>{feeds[epRef.feedUrl].data.meta.title}</h2>\n        <img src={episodeImage(epRef, feeds)} alt='' />\n        <p dangerouslySetInnerHTML={{__html: epRef.episode.description}} />\n        {this.player()}\n      </div>\n    );\n  }\n\n  player(): ReactElement {\n    const {epRef, updatePlaying, playingDuration} = this.props;\n    const same = this.props.playing ? this.props.playing.epRef === epRef : false;\n    const {seekAmount} = this.props.settings;\n\n    if (this.props.playing !== undefined && same) {\n      const {playing} = this.props;\n\n      return (\n        <div className='episode-player'>\n          <p>{timestamp(playing.time)}</p>\n          <Rewind onClick={() => updatePlaying({time: playing.time - seekAmount})} size='32px' />\n          {this.button()}\n          <FastForward onClick={() => updatePlaying({time: playing.time + seekAmount})} size='32px' />\n          <p>{timestamp(playingDuration || 0)}</p>\n        </div>\n      );\n    }\n    return (\n      <div className='episode-player'>\n        <Rewind size='32px' />\n        {this.button()}\n        <FastForward size='32px' />\n      </div>\n    );\n  }\n\n  button(): ReactElement {\n    const {playing, updatePlaying, playEpisode, epRef} = this.props;\n\n    if (playing !== undefined && playing.epRef === epRef) {\n      if (playing.paused) {\n        return <Play onClick={() => updatePlaying({paused: false})} size='36px' />;\n      }\n      return <Pause onClick={() => updatePlaying({paused: true})} size='36px' />;\n    }\n    return <Play onClick={() => playEpisode(epRef)} size='36px' />;\n  }\n}\n","import React, { Component, KeyboardEvent } from 'react';\n\ninterface Props {\n  defaultValue?: string;\n  className?: string;\n  placeholder?: string;\n  callback: (value: string) => void;\n}\n\nexport default class TextEntry extends Component<Props, {entered: string}> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {entered: props.defaultValue || ''};\n\n    this.handleKey = this.handleKey.bind(this);\n  }\n\n  render() {\n    return (\n      <input\n        type='text'\n        value={this.state.entered}\n        className={this.props.className}\n        onChange={e => this.setState({entered: e.target.value})}\n        onKeyDown={this.handleKey}\n        placeholder={this.props.placeholder}\n      />\n    );\n  }\n\n  handleKey(e: KeyboardEvent) {\n    e.stopPropagation();\n\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    const {entered} = this.state;\n\n    if (entered) {\n      this.setState({entered: ''});\n      this.props.callback(entered);\n    }\n  }\n}\n","import React, {ReactElement} from 'react';\nimport './Item.scss';\n\ninterface Props {\n  image: string;\n  title: string;\n  body: ReactElement | string;\n  onClick?: () => void;\n  icons?: ReactElement;\n  className?: string;\n}\n\nexport default function Item(props: Props) {\n  const {className, onClick, image, title, body, icons} = props;\n\n  return (\n    <div className={`item ${className}`} onClick={onClick}>\n      <div className='item-image'>\n        <img src={image} alt='' />\n      </div>\n      <div className='item-inner'>\n        <h2>{title}</h2>\n        {body}\n      </div>\n      <div className='item-icons'>\n        {icons}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {XCircle} from 'react-feather';\nimport moment from 'moment';\nimport {Feeds} from './types';\nimport Item from './Item';\n\ninterface Props {\n  feeds: Feeds;\n  url: string;\n  openFeed: (url: string) => void;\n  deleteFeed: (url: string) => void;\n}\n\nexport default function FeedItem(props: Props) {\n  const {feeds, url, openFeed, deleteFeed} = props;\n  const feed = feeds[url].data;\n\n  return (\n    <Item\n      title={feed.meta.title}\n      image={feed.meta.imageURL}\n      body={(\n        <>\n          <p>{feed.meta.description}</p>\n          <p>{feed.episodes.length} episodes</p>\n          <p>Last refreshed {moment(feeds[url].time).fromNow()}</p>\n        </>\n    )}\n      onClick={() => openFeed(url)}\n      icons={(\n        <XCircle onClick={e => {\n          e.stopPropagation();\n          deleteFeed(url);\n        }}\n        />\n    )}\n    />\n  );\n}\n","import React from 'react';\n// import {Plus} from 'react-feather';\nimport TextEntry from '../TextEntry';\nimport {Feeds} from '../types';\nimport FeedItem from '../FeedItem';\n\nimport './FeedsView.scss';\n\ninterface Props {\n  feeds: Feeds;\n  openFeed: (url: string) => void;\n  addFeed: (url: string) => void;\n  deleteFeed: (url: string) => void;\n}\n\nexport default function FeedsView(props: Props) {\n  const {feeds, openFeed, addFeed, deleteFeed} = props;\n\n  return (\n    <>\n      {\n        Object.keys(feeds)\n          .map(url => (\n            <FeedItem\n              key={url}\n              url={url}\n              feeds={feeds}\n              openFeed={openFeed}\n              deleteFeed={deleteFeed}\n            />\n          ))\n      }\n      <div className='add-feed'>\n        <TextEntry placeholder='Podcast Feed URL' callback={addFeed} />\n        {/* <div className='add-feed-button' onClick={addFeed}><Plus /></div> */}\n      </div>\n    </>\n  );\n}\n","import moment from 'moment';\nimport React from 'react';\nimport {MoreHorizontal, Play} from 'react-feather';\nimport Item from './Item';\nimport {EpisodeReference, Feeds} from './types';\nimport {episodeImage} from './utils';\n\ninterface Props {\n  episode: EpisodeReference;\n  feeds: Feeds;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\nexport default function EpisodeItem(props: Props) {\n  const {episode, feeds, openEpisode, playEpisode} = props;\n\n  return (\n    <Item\n      title={episode.episode.title}\n      image={episodeImage(episode, feeds)}\n      body={moment(episode.episode.pubDate).format('L LT')}\n      icons={(\n        <>\n          <Play onClick={() => playEpisode(episode)} />\n          <MoreHorizontal onClick={() => openEpisode(episode)} />\n        </>\n      )}\n      className='episode'\n    />\n  );\n}\n","import React, {PureComponent} from 'react';\n\nimport EpisodeItem from '../EpisodeItem';\nimport {EpisodeReference, Feeds} from '../types';\n\ninterface Props {\n  feeds: Feeds;\n  feedUrl: string;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\nexport default class FeedView extends PureComponent<Props> {\n  render() {\n    const {feeds, feedUrl, openEpisode, playEpisode} = this.props;\n\n    return feeds[feedUrl].data.episodes.map(episode => (\n      <EpisodeItem\n        key={episode.guid}\n        episode={{episode, feedUrl}}\n        feeds={feeds}\n        openEpisode={openEpisode}\n        playEpisode={playEpisode}\n      />\n    ));\n  }\n}\n","import fuzzysort from 'fuzzysort';\nimport React, {PureComponent} from 'react';\nimport {Search} from 'react-feather';\nimport EpisodeItem from '../EpisodeItem';\nimport {EpisodeReference, Feeds} from '../types';\n\nimport './SearchView.scss';\n\ninterface Props {\n  feeds: Feeds;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\ninterface State {\n  searchTerm: string;\n}\n\nexport default class SearchView extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      searchTerm: ''\n    };\n  }\n\n  render() {\n    const {feeds} = this.props;\n\n    const episodes = Object.keys(feeds)\n      .flatMap(feedUrl => feeds[feedUrl].data.episodes.map(episode => ({\n        ref: {episode, feedUrl},\n        episodeTitle: episode.title,\n        episodeDescription: episode.description\n      })));\n\n    const options = {\n      limit: 50,\n      keys: ['episodeTitle', 'episodeDescription'],\n      threshold: -500\n    };\n\n    const renderedEpisodes = fuzzysort.go(this.state.searchTerm, episodes, options)\n      .map(result => (\n        <EpisodeItem\n          key={result.obj.ref.episode.guid}\n          episode={result.obj.ref}\n          feeds={feeds}\n          openEpisode={this.props.openEpisode}\n          playEpisode={this.props.playEpisode}\n        />\n      ));\n\n    return (\n      <div className='search'>\n        <div className='search-body'>\n          {renderedEpisodes.length ? renderedEpisodes : <h1>No Search Term Entered</h1>}\n        </div>\n        <div className='search-input'>\n          <Search />\n          <input\n            type='text'\n            placeholder='Search Term'\n            onChange={e => this.setState({searchTerm: e.target.value})}\n            value={this.state.searchTerm}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component, ReactElement} from 'react';\nimport {RotateCcw} from 'react-feather';\n\nimport isUrl from 'is-url-superb';\nimport {DEFAULT_SETTINGS, Settings} from '../types';\n\n\nimport './SettingsView.scss';\n\ninterface Props {\n  settings: Settings;\n  updateSettings: (updates: object, valid: boolean) => void;\n}\n\nexport default class SettingsView extends Component<Props> {\n  render(): ReactElement {\n    const {settings, updateSettings} = this.props;\n    const {corsProxy, toggle, seekBackwards, seekForwards} = settings;\n\n    const helpUrl = 'https://devcenter.heroku.com/articles/getting-started-with-nodejs';\n    const defaultUrl = 'https://caster-cors-proxy.herokuapp.com';\n    const corsAnywhere = 'https://caster-cors-proxy.herokuapp.com';\n\n    return (\n      <div className='settings'>\n        <p>Many websites do not allow you to request RSS feeds from inside a browser, so you need to use a proxy to access them. I've set up {defaultUrl} which you are totally free to use, but if you want to setup a proxy yourself you can follow <a href={helpUrl}>this guide</a> with the <a href={corsAnywhere}>CORS Anywhere</a>.</p>\n        <label>CORS Proxy:</label>\n        <input\n          type='url'\n          pattern='https?://.*'\n          value={corsProxy}\n          onChange={e => this.updateProxy(e.target.value)}\n          style={style(isUrl(corsProxy))}\n        />\n        <label>Pause/Play Toggle:</label>\n        <input\n          type='text'\n          value={toggle}\n          style={style(fixCharacter(toggle)[1])}\n          onChange={e => this.updateCharacter('toggle', e.target.value)}\n        />\n        <label>Seek Backwards:</label>\n        <input\n          type='text'\n          value={seekBackwards}\n          style={style(fixCharacter(seekBackwards)[1])}\n          onChange={e => this.updateCharacter('seekBackwards', e.target.value)}\n        />\n        <label>Seek Forwards:</label>\n        <input\n          type='text'\n          value={seekForwards}\n          style={style(fixCharacter(seekForwards)[1])}\n          onChange={e => this.updateCharacter('seekForwards', e.target.value)}\n        />\n        <button\n          type='reset'\n          onClick={() => updateSettings(DEFAULT_SETTINGS, true)}\n        >\n          <RotateCcw />\n        Reset\n        </button>\n      </div>\n    );\n  }\n\n  updateProxy(url: string) {\n    this.props.updateSettings({corsProxy: url}, isUrl(url));\n  }\n\n  updateCharacter(key: string, string: string) {\n    const [character, valid] = fixCharacter(string);\n    this.props.updateSettings({[key]: character}, valid);\n  }\n}\n\nfunction fixCharacter(characters: string): [string, boolean] {\n  if (characters.length > 0) {\n    return [characters[characters.length - 1].toLowerCase(), true];\n  }\n  return ['', false];\n}\n\nfunction style(valid: boolean): {border: string} {\n  return {\n    border: `1px solid ${valid ? 'green' : 'red'}`\n  };\n}\n","import {UserSession} from 'blockstack';\nimport update from 'immutability-helper';\nimport React, {Component, ReactElement} from 'react';\nimport {RefreshCw, DownloadCloud} from 'react-feather';\nimport { Textfit } from 'react-textfit';\nimport Hotkeys from 'react-hot-keys';\n\nimport Player from './Player';\nimport SideNav from './SideNav';\nimport {DEFAULT_SETTINGS, EpisodeReference, Feeds, Playing, Settings, View} from './types';\nimport {loadData, requestPodcast, saveData} from './utils';\nimport EpisodeView from './views/EpisodeView';\nimport FeedsView from './views/FeedsView';\nimport FeedView from './views/FeedView';\nimport SearchView from './views/SearchView';\nimport SettingsView from './views/SettingsView';\n\nimport './Dashboard.scss';\n\nconst FEEDS_FILENAME = 'feeds.json';\nconst SETTINGS_FILENAME = 'settings.json';\nconst PLAYING_FILENAME = 'playing.json';\n\ninterface Props {\n  userSession: UserSession;\n  signOut: () => (void);\n}\n\ninterface State {\n  feeds: Feeds;\n  view: View;\n  playing: Playing | undefined;\n  playingDuration: number | undefined;\n  viewing: string | EpisodeReference | undefined;\n  settings: Settings;\n  sidenavOpen: boolean;\n}\n\nexport default class Dashboard extends Component<Props, State> {\n  saveTimer: NodeJS.Timer | null = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      // Main State\n      feeds: {},\n      settings: DEFAULT_SETTINGS,\n      view: View.Feeds,\n      playing: undefined,\n      playingDuration: undefined,\n      viewing: undefined,\n      sidenavOpen: false\n    };\n\n    this.refresh = this.refresh.bind(this);\n    this.addFeed = this.addFeed.bind(this);\n    this.openEpisode = this.openEpisode.bind(this);\n    this.playEpisode = this.playEpisode.bind(this);\n    this.updatePlaying = this.updatePlaying.bind(this);\n    this.deleteFeed = this.deleteFeed.bind(this);\n    this.updateSettings = this.updateSettings.bind(this);\n    this.savePlaying = this.savePlaying.bind(this);\n  }\n\n  render() {\n    return (\n      <Hotkeys\n        keyName='*'\n        onKeyDown={(_key, e, _handle) => this.handleKey(e.key)}\n      >\n        <div className='dashboard'>\n          <div className='titlebar'>\n            <SideNav\n              open={this.state.sidenavOpen}\n              feeds={this.state.feeds}\n              openHome={() => this.setState({view: View.Feeds, sidenavOpen: false})}\n              openFeed={viewing => this.setState({view: View.Viewing, viewing, sidenavOpen: false})}\n              openSettings={() => this.setState({view: View.Settings, sidenavOpen: false})}\n              openSearch={() => this.setState({view: View.Search, sidenavOpen: false})}\n              changeState={open => this.setState({sidenavOpen: open})}\n              signOut={this.props.signOut}\n            />\n            <div className='title'>\n              <Textfit>\n                <p className='title-text'>{this.title()}</p>\n              </Textfit>\n            </div>\n            <div className='resync-button' title='Redownload podcast data'>\n              <DownloadCloud onClick={this.sync} />\n            </div>\n            <div className='refresh-button' title='Refresh the feeds'>\n              <RefreshCw onClick={this.refresh} />\n            </div>\n          </div>\n          <div className='main'>{this.inner()}</div>\n          <Player\n            playing={this.state.playing}\n            feeds={this.state.feeds}\n            duration={this.state.playingDuration}\n            updatePlaying={this.updatePlaying}\n            settings={this.state.settings}\n            setDuration={playingDuration => this.setState({playingDuration})}\n            endPlaying={() => this.updatePlaying({paused: true})}\n            openEpisode={this.openEpisode}\n          />\n        </div>\n      </Hotkeys>\n    );\n  }\n\n  handleKey(key: string) {\n    const {playing, settings} = this.state;\n    const {toggle, seekBackwards, seekForwards, seekAmount} = settings;\n\n    if (playing) {\n      if (key === toggle) {\n        this.updatePlaying({paused: !playing.paused});\n      }\n\n      if (key === seekBackwards) {\n        this.updatePlaying({time: playing.time - seekAmount});\n      }\n\n      if (key === seekForwards) {\n        this.updatePlaying({time: playing.time + seekAmount});\n      }\n    }\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    const statePlaying = (state: State) => state.playing && !state.playing.paused;\n\n    if (!statePlaying(prevState) && statePlaying(this.state)) {\n      this.savePlaying();\n      this.saveTimer = setInterval(this.savePlaying, 60000);\n    }\n\n    if (statePlaying(prevState) && !statePlaying(this.state)) {\n      if (this.saveTimer) {\n        clearInterval(this.saveTimer);\n        this.saveTimer = null;\n      }\n\n      this.savePlaying();\n    }\n  }\n\n  updateSettings(updates: Partial<Settings>, valid: boolean) {\n    this.setState(\n      {settings: update(this.state.settings, {$merge: updates})},\n      () => (valid ? this.saveSettings() : null)\n    );\n  }\n\n  updatePlaying(updates: Partial<Playing>) {\n    if (this.state.playing === undefined) {\n      return;\n    }\n\n    this.setState(\n      {playing: update(this.state.playing, {$merge: updates})}\n    );\n  }\n\n  title(): string {\n    const {view, viewing, feeds} = this.state;\n\n    if (view === View.Feeds) {\n      return 'Podcasts';\n    } if (view === View.Settings) {\n      return 'Settings';\n    } if (view === View.Search) {\n      return 'Search';\n    } if (view === View.Viewing) {\n      if (typeof viewing === 'string') {\n        return feeds[viewing].data.meta.title;\n      } if (typeof viewing !== 'undefined') {\n        return viewing.episode.title;\n      }\n      console.error('View set to viewing but this.state.viewing is undefined');\n      return '';\n    }\n    console.log(`View ${view} not handled in title()`);\n    return '';\n  }\n\n  inner(): ReactElement | ReactElement[] {\n    const {feeds, view, playing, viewing, settings} = this.state;\n\n    if (view === View.Feeds) {\n      return (\n        <FeedsView\n          feeds={feeds}\n          openFeed={feed => this.setState({viewing: feed, view: View.Viewing})}\n          addFeed={this.addFeed}\n          deleteFeed={this.deleteFeed}\n        />\n      );\n    } if (view === View.Settings) {\n      return (\n        <SettingsView\n          settings={settings}\n          updateSettings={this.updateSettings}\n        />\n      );\n    } if (view === View.Viewing) {\n      if (typeof viewing === 'string') {\n        return (\n          <FeedView\n            feedUrl={viewing}\n            feeds={feeds}\n            openEpisode={this.openEpisode}\n            playEpisode={this.playEpisode}\n          />\n        );\n      } if (typeof viewing !== 'undefined') {\n        return (\n          <EpisodeView\n            epRef={viewing}\n            feeds={feeds}\n            playEpisode={this.playEpisode}\n            playing={playing}\n            playingDuration={this.state.playingDuration}\n            updatePlaying={this.updatePlaying}\n            settings={settings}\n          />\n        );\n      }\n      const error = 'View set to viewing but this.state.viewing is undefined';\n      console.error(error);\n      return <p>{error}</p>;\n    } if (view === View.Search) {\n      return (\n        <SearchView\n          feeds={this.state.feeds}\n          openEpisode={this.openEpisode}\n          playEpisode={this.playEpisode}\n        />\n      );\n    }\n    const error = `View ${view} not handled in inner()`;\n    console.error(error);\n    return <p>{error}</p>;\n  }\n\n  playEpisode(epRef: EpisodeReference) {\n    this.setState({playing: {epRef, time: 0, paused: false}});\n  }\n\n  async refresh() {\n    await Promise.all(Object.keys(this.state.feeds).map(this.addFeed));\n    this.saveFeeds();\n  }\n\n  deleteFeed(url: string) {\n    const feeds = update(\n      this.state.feeds,\n      {$unset: [url]}\n    );\n\n    this.setState({feeds}, this.saveFeeds);\n  }\n\n  openEpisode(viewing: EpisodeReference) {\n    this.setState({viewing, view: View.Viewing});\n  }\n\n  clearFeeds() {\n    this.setState({feeds: {}}, this.saveFeeds);\n  }\n\n  async addFeed(url: string) {\n    return requestPodcast(this.state.settings.corsProxy, url)\n      .then(data => {\n        const feeds = update(\n          this.state.feeds,\n          { $merge: {[url]: {time: Date.now(), data}} }\n        );\n        return this.setState({feeds});\n      })\n      .then(() => this.saveFeeds());\n  }\n\n  saveFeeds() {\n    saveData(this.props.userSession, FEEDS_FILENAME, this.state.feeds);\n  }\n\n  saveSettings() {\n    saveData(this.props.userSession, SETTINGS_FILENAME, this.state.settings);\n  }\n\n  savePlaying() {\n    saveData(this.props.userSession, PLAYING_FILENAME, this.state.playing);\n  }\n\n  sync() {\n    const {userSession} = this.props;\n\n    loadData<Feeds>(userSession, FEEDS_FILENAME)\n      .then(feeds => this.setState({feeds}))\n      .then(() => loadData<Playing | undefined>(userSession, PLAYING_FILENAME))\n      .then(playing => this.setState({playing}));\n\n    loadData<Settings>(userSession, SETTINGS_FILENAME)\n      .then(settings => this.setState({\n        // Merge in settings (convenient because it allows me to update whats in settings)\n        settings: update(this.state.settings, {$merge: settings})\n      }));\n  }\n\n  componentDidMount() {\n    this.sync();\n  }\n}\n"],"sourceRoot":""}