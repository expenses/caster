{"version":3,"sources":["Dashboard/utils.tsx","Dashboard/Player/PlayerButton.tsx","Dashboard/Player/DesktopPlayer.tsx","Dashboard/Player/PlayerBar.tsx","Dashboard/Player/index.tsx","Dashboard/SideNavItem.tsx","Dashboard/SideNav.tsx","Dashboard/types.tsx","Dashboard/views/EpisodeView.tsx","Dashboard/TextEntry.tsx","Dashboard/Item.tsx","Dashboard/FeedItem.tsx","Dashboard/views/FeedsView.tsx","Dashboard/EpisodeItem.tsx","Dashboard/views/FeedView.tsx","Dashboard/views/SearchView.tsx","Dashboard/views/SettingsView.tsx","Dashboard/AudioPlayer.ts","Dashboard/index.tsx"],"names":["options","fields","meta","episodes","required","requestPodcast","proxy","url","a","console","log","combined","endsWith","getPodcastFromURL","saveData","userSession","filename","data","putFile","JSON","stringify","loadData","getFile","then","content","ArrayBuffer","parse","episodeImage","ref","feeds","episode","imageURL","feedUrl","timestamp","secs","hours","Math","floor","minutes","seconds","pad","value","toString","padStart","PlayerButton","this","props","audioPlayer","fallback","toggle","bind","isLoaded","isPaused","onClick","e","stopPropagation","Component","DesktopPlayer","seekAmount","className","seekRelative","time","type","min","max","duration","step","onChange","seekTo","target","PlayerBar","style","display","width","fraction","Player","openEpisode","settings","epRef","getEpRef","episodeTitle","title","feedTitle","loadEp","src","alt","dangerouslySetInnerHTML","__html","description","SideNavItem","icon","text","React","View","memo","open","openSettings","openHome","openSearch","changeState","signOut","isOpen","customBurgerIcon","onStateChange","state","DEFAULT_SETTINGS","corsProxy","seekBackwards","seekForwards","EpisodeView","feed","same","size","PlayButton","playEpisode","TextEntry","entered","defaultValue","handleKey","setState","onKeyDown","placeholder","key","callback","Item","image","body","icons","FeedItem","openFeed","deleteFeed","length","moment","fromNow","addFeed","Object","keys","map","EpisodeItem","pubDate","format","guid","SearchView","searchTerm","flatMap","episodeDescription","renderedEpisodes","fuzzysort","go","limit","threshold","result","obj","PureComponent","SettingsView","updateSettings","href","pattern","updateProxy","isUrl","fixCharacter","updateCharacter","string","character","valid","characters","toLowerCase","border","AudioPlayer","refresh","syncCallback","audio","timer","syncTimer","document","createElement","sync","end","ondurationchange","onended","navigator","mediaSession","setActionHandler","play","pause","playbackState","playing","enclosure","currentTime","playNoCallback","pauseNoCallback","metadata","MediaMetadata","artist","artwork","paused","window","setInterval","clearInterval","Dashboard","saveTimer","view","Feeds","sidenavOpen","Settings","Search","setSideNav","openViewing","viewing","Viewing","undefined","loading","savePlaying","keyName","_key","animation","inner","updates","update","$merge","saveSettings","error","Promise","all","saveFeeds","newFeeds","$unset","save","Date","now","newSettings","syncFeeds","feedsPromise","playingPromise"],"mappings":"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","file":"static/js/6.cc05dff7.chunk.js","sourcesContent":["import {UserSession} from 'blockstack';\nimport {getPodcastFromURL} from 'podcast-feed-parser';\nimport {EpisodeReference, Feed, Feeds} from './types';\n\n// https://github.com/jbierfeldt/podcast-feed-parser/blob/master/index.js#L17\nconst options = {\n  fields: {\n    meta: ['title', 'description', 'imageURL'],\n    episodes: ['title', 'description', 'imageURL', 'pubDate', 'enclosure', 'duration', 'guid']\n  },\n\n  required: {\n    meta: ['title', 'description'],\n    episodes: []\n  }\n};\n\nexport async function requestPodcast(proxy: string, url: string): Promise<Feed> {\n  console.log(`Requesting '${url}' via '${proxy}'`);\n  const combined = proxy.endsWith('/') ? proxy + url : `${proxy}/${url}`;\n  return getPodcastFromURL(combined, options);\n}\n\nexport function saveData<T>(userSession: UserSession, filename: string, data: T): Promise<string> {\n  return userSession.putFile(filename, JSON.stringify(data), {});\n}\n\nexport async function loadData<T>(userSession: UserSession, filename: string): Promise<T> {\n  return userSession.getFile(filename, {})\n    .then(content => {\n      if (content instanceof ArrayBuffer) {\n        // todo: error\n        return {};\n      }\n      return JSON.parse(content) || {};\n    });\n}\n\nexport function episodeImage(ref: EpisodeReference, feeds: Feeds): string {\n  return ref.episode.imageURL || feeds[ref.feedUrl].data.meta.imageURL;\n}\n\nexport function timestamp(secs: number): string {\n  const hours = Math.floor(secs / 3600);\n  const minutes = Math.floor((secs - (hours * 3600)) / 60);\n  const seconds = Math.floor(secs % 60);\n\n  return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n}\n\nfunction pad(value: number): string {\n  return value.toString().padStart(2, '0');\n}\n","import React, {Component, MouseEvent, ReactElement} from 'react';\nimport {Play, Pause} from 'react-feather';\nimport AudioPlayer from '../AudioPlayer';\n\ninterface Props {\n  audioPlayer: AudioPlayer;\n  fallback?: ReactElement;\n}\n\nexport default class PlayerButton extends Component<Props> {\n  render() {\n    const {audioPlayer, fallback} = this.props;\n    const toggle = this.toggle.bind(this);\n\n    if (audioPlayer.isLoaded()) {\n      if (audioPlayer.isPaused()) {\n        return <Play onClick={toggle} />;\n      }\n      return <Pause onClick={toggle} />;\n    }\n\n    return fallback || null;\n  }\n\n  toggle(e: MouseEvent) {\n    const {audioPlayer} = this.props;\n    e.stopPropagation();\n    audioPlayer.toggle();\n  }\n}\n","import React from 'react';\nimport {Rewind, FastForward, Play} from 'react-feather';\nimport {timestamp} from '../utils';\nimport PlayerButton from './PlayerButton';\nimport AudioPlayer from '../AudioPlayer';\n\ninterface Props {\n  seekAmount: number;\n  audioPlayer: AudioPlayer;\n}\n\nexport default function DesktopPlayer(props: Props) {\n  const {seekAmount, audioPlayer} = props;\n\n  return (\n    <div className='desktop-player'>\n      <Rewind onClick={() => audioPlayer.seekRelative(-seekAmount)} />\n      <PlayerButton audioPlayer={audioPlayer} fallback={<Play />} />\n      <FastForward onClick={() => audioPlayer.seekRelative(+seekAmount)} />\n      <p>{timestamp(audioPlayer.time())}</p>\n      <input\n        className='player-range-bar'\n        type='range'\n        min='0'\n        value={audioPlayer.time()}\n        max={audioPlayer.duration()}\n        step='any'\n        onChange={e => audioPlayer.seekTo(e.target.value as any as number)}\n      />\n      <p>{timestamp(audioPlayer.duration())}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport AudioPlayer from '../AudioPlayer';\n\ninterface Props {\n  audioPlayer: AudioPlayer;\n}\n\nexport default function PlayerBar(props: Props) {\n  const {audioPlayer} = props;\n\n  return (\n    <div className='player-bar' style={{display: audioPlayer.isLoaded() ? 'inherit' : 'none'}}>\n      <div className='player-bar-inner'>\n        <div className='player-bar-progress' style={{width: `${audioPlayer.fraction() * 100}%`}} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Feeds, Settings, EpisodeReference} from '../types';\nimport {episodeImage, timestamp} from '../utils';\nimport DesktopPlayer from './DesktopPlayer';\nimport PlayerButton from './PlayerButton';\nimport PlayerBar from './PlayerBar';\nimport AudioPlayer from '../AudioPlayer';\nimport './index.scss';\n\ninterface Props {\n  feeds: Feeds;\n  settings: Settings;\n  openEpisode: (ref: EpisodeReference) => void;\n  audioPlayer: AudioPlayer;\n}\n\nexport default function Player(props: Props) {\n  const {feeds, openEpisode, settings, audioPlayer} = props;\n\n  const epRef = audioPlayer.getEpRef();\n\n  const episode = epRef ? epRef.episode : null;\n\n  const episodeTitle = episode ? episode.title : null;\n  const feedTitle = epRef ? feeds[epRef.feedUrl].data.meta.title : null;\n\n  const loadEp = () => (epRef ? openEpisode(epRef) : null);\n\n  return (\n    <div className='player'>\n      <PlayerBar audioPlayer={audioPlayer} />\n      <div className='player-image' onClick={loadEp}>\n        {epRef ? <img src={episodeImage(epRef, feeds)} alt='' /> : null}\n      </div>\n      <div className='player-description' onClick={loadEp}>\n        <p className='player-description-title'>{episodeTitle}</p>\n        <p className='player-description-subtitle'>{feedTitle}</p>\n        <p className='player-description-time'>\n          {epRef ? `${timestamp(audioPlayer.time())}/${timestamp(audioPlayer.duration())}` : null}\n        </p>\n      </div>\n      <div className='player-button'>\n        <PlayerButton audioPlayer={audioPlayer} />\n      </div>\n      <DesktopPlayer\n        {...props}\n        audioPlayer={audioPlayer}\n        seekAmount={settings.seekAmount}\n      />\n      <div className='desktop-player-description'>\n        <h2>{episodeTitle}</h2>\n        <h3>{feedTitle}</h3>\n        <p\n          dangerouslySetInnerHTML={{__html: episode ? episode.description : ''}}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, {MouseEvent, ReactElement} from 'react';\n\ninterface Props {\n  icon: ReactElement;\n  text: string;\n  onClick: (e: MouseEvent) => void;\n}\n\nexport default function SideNavItem(props: Props): ReactElement {\n  const {onClick, icon, text} = props;\n\n  return (\n    <div\n      onClick={onClick}\n      className='sidenav-item'\n    >\n      <div className='sidenav-icon'>{icon}</div>\n      <p>{text}</p>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { slide as Slide } from 'react-burger-menu';\nimport {Home, LogOut, Menu, Search, Settings} from 'react-feather';\nimport SideNavItem from './SideNavItem';\n\nimport './SideNav.scss';\n\ninterface Props {\n  open: boolean;\n  changeState: (open: boolean) => void;\n  openSettings: () => void;\n  openHome: () => void;\n  openSearch: () => void;\n  signOut: () => void;\n}\n\nfunction SideNav(props: Props) {\n  const {\n    open, openSettings, openHome, openSearch, changeState, signOut\n  } = props;\n\n  return (\n    <div className='menu-button'>\n      <Slide\n        isOpen={open}\n        customBurgerIcon={<Menu />}\n        onStateChange={state => changeState(state.isOpen)}\n      >\n        <SideNavItem icon={<Home />} text='Home' onClick={openHome} />\n        <SideNavItem icon={<Search />} text='Search' onClick={openSearch} />\n        <SideNavItem icon={<Settings />} text='Settings' onClick={openSettings} />\n        <SideNavItem icon={<LogOut />} text='Sign Out' onClick={signOut} />\n      </Slide>\n    </div>\n  );\n}\n\nexport default React.memo(SideNav);\n","export interface FeedState {data: Feed; time: Date }\nexport type Feeds = Record<string, FeedState>;\n\nexport enum View {\n  Feeds = 'Feeds',\n  Settings = 'Settings',\n  Viewing = 'Viewing',\n  Search = 'Search',\n}\n\nexport interface EpisodeReference {\n  feedUrl: string;\n  episode: Episode;\n}\n\nexport interface Feed {\n  meta: {\n    title: string;\n    description: string;\n    imageURL: string;\n  };\n  episodes: Episode[];\n}\n\nexport interface Episode {\n  title: string;\n  description: string;\n  pubDate: string;\n  enclosure: {\n    length: number;\n    type: string;\n    url: string;\n  };\n  guid: string;\n  duration: string | null;\n  imageURL: string | null;\n}\n\nexport interface Playing {\n  epRef: EpisodeReference;\n  time: number;\n}\n\nexport interface Settings {\n  corsProxy: string;\n  toggle: string;\n  seekBackwards: string;\n  seekForwards: string;\n  seekAmount: number;\n}\n\nexport const DEFAULT_SETTINGS = {\n  corsProxy: 'https://caster-cors-proxy.herokuapp.com',\n  toggle: 'p',\n  seekBackwards: ',',\n  seekForwards: '.',\n  seekAmount: 5\n};\n","import React from 'react';\nimport {FastForward, Pause, Play, Rewind} from 'react-feather';\nimport {EpisodeReference, Feeds, Settings} from '../types';\nimport AudioPlayer from '../AudioPlayer';\nimport {episodeImage, timestamp} from '../utils';\n\nimport './EpisodeView.scss';\n\ninterface Props {\n  epRef: EpisodeReference;\n  feeds: Feeds;\n  playEpisode: (ref: EpisodeReference) => void;\n  audioPlayer: AudioPlayer;\n  settings: Settings;\n}\n\nexport default function EpisodeView(props: Props) {\n  const {epRef, feeds} = props;\n\n  const feed = feeds[epRef.feedUrl].data;\n\n  return (\n    <div className='episode-view'>\n      <h2>{epRef.episode.title}</h2>\n      <h3>{feed.meta.title}</h3>\n      <div className='episode-view-image'>\n        <img src={episodeImage(epRef, feeds)} alt='' />\n      </div>\n      <Player {...props} />\n      <p dangerouslySetInnerHTML={{__html: epRef.episode.description}} />\n    </div>\n  );\n}\n\nfunction Player(props: Props) {\n  const {epRef, audioPlayer, settings} = props;\n  const same = audioPlayer.getEpRef() === epRef;\n  const {seekAmount} = settings;\n\n  if (same) {\n    return (\n      <div className='episode-player'>\n        <p>{timestamp(audioPlayer.time())}</p>\n        <Rewind onClick={() => audioPlayer.seekRelative(-seekAmount)} size='32px' />\n        <PlayButton {...props} />\n        <FastForward onClick={() => audioPlayer.seekRelative(+seekAmount)} size='32px' />\n        <p>{timestamp(audioPlayer.duration())}</p>\n      </div>\n    );\n  }\n  return (\n    <div className='episode-player'>\n      <Rewind size='32px' />\n      <PlayButton {...props} />\n      <FastForward size='32px' />\n    </div>\n  );\n}\n\nfunction PlayButton(props: Props) {\n  const {audioPlayer, playEpisode, epRef} = props;\n\n  if (audioPlayer.getEpRef() === epRef) {\n    if (audioPlayer.isPaused()) {\n      return <Play onClick={() => audioPlayer.toggle()} size='36px' />;\n    }\n    return <Pause onClick={() => audioPlayer.toggle()} size='36px' />;\n  }\n  return <Play onClick={() => playEpisode(epRef)} size='36px' />;\n}\n","import React, { Component, KeyboardEvent } from 'react';\n\ninterface Props {\n  defaultValue?: string;\n  className?: string;\n  placeholder?: string;\n  callback: (value: string) => void;\n}\n\nexport default class TextEntry extends Component<Props, {entered: string}> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {entered: props.defaultValue || ''};\n\n    this.handleKey = this.handleKey.bind(this);\n  }\n\n  render() {\n    return (\n      <input\n        type='text'\n        value={this.state.entered}\n        className={this.props.className}\n        onChange={e => this.setState({entered: e.target.value})}\n        onKeyDown={this.handleKey}\n        placeholder={this.props.placeholder}\n      />\n    );\n  }\n\n  handleKey(e: KeyboardEvent) {\n    const {entered} = this.state;\n\n    e.stopPropagation();\n\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    if (entered) {\n      this.setState({entered: ''});\n      this.props.callback(entered);\n    }\n  }\n}\n","import React, {ReactElement} from 'react';\nimport './Item.scss';\n\ninterface Props {\n  image: string;\n  title: string;\n  body: ReactElement | string;\n  onClick?: () => void;\n  icons?: ReactElement;\n  className?: string;\n}\n\nexport default function Item(props: Props) {\n  const {className, onClick, image, title, body, icons} = props;\n\n  return (\n    <div className={`item ${className}`} onClick={onClick}>\n      <div className='item-image'>\n        <img src={image} alt='' />\n      </div>\n      <div className='item-inner'>\n        <h2>{title}</h2>\n        {body}\n      </div>\n      <div className='item-icons'>\n        {icons}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {XCircle} from 'react-feather';\nimport moment from 'moment';\nimport {Feeds} from './types';\nimport Item from './Item';\n\ninterface Props {\n  feeds: Feeds;\n  url: string;\n  openFeed: (url: string) => void;\n  deleteFeed: (url: string) => void;\n}\n\nexport default function FeedItem(props: Props) {\n  const {feeds, url, openFeed, deleteFeed} = props;\n  const feed = feeds[url].data;\n\n  return (\n    <Item\n      title={feed.meta.title}\n      image={feed.meta.imageURL}\n      body={(\n        <>\n          <p>{feed.meta.description}</p>\n          <p>{feed.episodes.length} episodes</p>\n          <p>Last refreshed {moment(feeds[url].time).fromNow()}</p>\n        </>\n    )}\n      onClick={() => openFeed(url)}\n      icons={(\n        <XCircle onClick={e => {\n          e.stopPropagation();\n          deleteFeed(url);\n        }}\n        />\n    )}\n    />\n  );\n}\n","import React from 'react';\nimport {Plus} from 'react-feather';\nimport TextEntry from '../TextEntry';\nimport {Feeds} from '../types';\nimport FeedItem from '../FeedItem';\n\nimport './FeedsView.scss';\n\ninterface Props {\n  feeds: Feeds;\n  openFeed: (url: string) => void;\n  addFeed: (url: string) => void;\n  deleteFeed: (url: string) => void;\n}\n\nfunction FeedsView(props: Props) {\n  const {feeds, addFeed} = props;\n\n  return (\n    <>\n      {\n        Object.keys(feeds).map(url => <FeedItem key={url} url={url} {...props} />)\n      }\n      <div className='add-feed'>\n        <Plus />\n        <TextEntry placeholder='Podcast Feed URL' callback={addFeed} />\n      </div>\n    </>\n  );\n}\n\nexport default React.memo(FeedsView);\n","import moment from 'moment';\nimport React from 'react';\nimport {MoreHorizontal, Play} from 'react-feather';\nimport Item from './Item';\nimport {EpisodeReference, Feeds} from './types';\nimport {episodeImage} from './utils';\n\ninterface Props {\n  episode: EpisodeReference;\n  feeds: Feeds;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\nexport default function EpisodeItem(props: Props) {\n  const {episode, feeds, openEpisode, playEpisode} = props;\n\n  return (\n    <Item\n      title={episode.episode.title}\n      image={episodeImage(episode, feeds)}\n      body={(\n        <p>{moment(episode.episode.pubDate).format('L LT')}</p>\n      )}\n      icons={(\n        <>\n          <Play onClick={() => playEpisode(episode)} />\n          <MoreHorizontal onClick={() => openEpisode(episode)} />\n        </>\n      )}\n      className='episode'\n    />\n  );\n}\n","import React from 'react';\n\nimport EpisodeItem from '../EpisodeItem';\nimport {EpisodeReference, Feeds} from '../types';\n\ninterface Props {\n  feeds: Feeds;\n  feedUrl: string;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\nfunction FeedView(props: Props) {\n  const {feeds, feedUrl} = props;\n\n  const episodes = feeds[feedUrl].data.episodes.map(episode => (\n    <EpisodeItem\n      key={episode.guid}\n      episode={{episode, feedUrl}}\n      {...props}\n    />\n  ));\n\n  return <>{episodes}</>;\n}\n\nexport default React.memo(FeedView);\n","import fuzzysort from 'fuzzysort';\nimport React, {PureComponent} from 'react';\nimport {Search} from 'react-feather';\nimport EpisodeItem from '../EpisodeItem';\nimport {EpisodeReference, Feeds} from '../types';\n\nimport './SearchView.scss';\n\ninterface Props {\n  feeds: Feeds;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\ninterface State {\n  searchTerm: string;\n}\n\nexport default class SearchView extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      searchTerm: ''\n    };\n  }\n\n  render() {\n    const {feeds} = this.props;\n    const {searchTerm} = this.state;\n\n    const episodes = Object.keys(feeds)\n      .flatMap(feedUrl => feeds[feedUrl].data.episodes.map(episode => ({\n        ref: {episode, feedUrl},\n        episodeTitle: episode.title,\n        episodeDescription: episode.description\n      })));\n\n    const options = {\n      limit: 50,\n      keys: ['episodeTitle', 'episodeDescription'],\n      threshold: -500\n    };\n\n    const renderedEpisodes = fuzzysort.go(searchTerm, episodes, options)\n      .map(result => (\n        <EpisodeItem\n          key={result.obj.ref.episode.guid}\n          episode={result.obj.ref}\n          {...this.props}\n        />\n      ));\n\n    return (\n      <div className='search'>\n        <div className='search-body'>\n          {renderedEpisodes.length ? renderedEpisodes : <h1>No Search Term Entered</h1>}\n        </div>\n        <div className='search-input'>\n          <Search />\n          <input\n            type='text'\n            placeholder='Search Term'\n            onChange={e => this.setState({searchTerm: e.target.value})}\n            value={searchTerm}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component, ReactElement} from 'react';\nimport {RotateCcw} from 'react-feather';\n\nimport isUrl from 'is-url-superb';\nimport {DEFAULT_SETTINGS, Settings} from '../types';\n\n\nimport './SettingsView.scss';\n\ninterface Props {\n  settings: Settings;\n  updateSettings: (updates: object, valid: boolean) => void;\n}\n\nexport default class SettingsView extends Component<Props> {\n  render(): ReactElement {\n    const {settings, updateSettings} = this.props;\n    const {corsProxy, toggle, seekBackwards, seekForwards} = settings;\n\n    const helpUrl = 'https://devcenter.heroku.com/articles/getting-started-with-nodejs';\n    const defaultUrl = 'https://caster-cors-proxy.herokuapp.com';\n    const corsAnywhere = 'https://caster-cors-proxy.herokuapp.com';\n\n    return (\n      <div className='settings'>\n        <p>Many websites do not allow you to request RSS feeds from inside a browser, so you need to use a proxy to access them. I&apos;ve set up {defaultUrl} which you are totally free to use, but if you want to setup a proxy yourself you can follow <a href={helpUrl}>this guide</a> with the <a href={corsAnywhere}>CORS Anywhere</a>.</p>\n        <label>CORS Proxy:</label>\n        <input\n          type='url'\n          pattern='https?://.*'\n          value={corsProxy}\n          onChange={e => this.updateProxy(e.target.value)}\n          style={style(isUrl(corsProxy))}\n        />\n        <label>Pause/Play Toggle:</label>\n        <input\n          type='text'\n          value={toggle}\n          style={style(fixCharacter(toggle)[1])}\n          onChange={e => this.updateCharacter('toggle', e.target.value)}\n        />\n        <label>Seek Backwards:</label>\n        <input\n          type='text'\n          value={seekBackwards}\n          style={style(fixCharacter(seekBackwards)[1])}\n          onChange={e => this.updateCharacter('seekBackwards', e.target.value)}\n        />\n        <label>Seek Forwards:</label>\n        <input\n          type='text'\n          value={seekForwards}\n          style={style(fixCharacter(seekForwards)[1])}\n          onChange={e => this.updateCharacter('seekForwards', e.target.value)}\n        />\n        <button onClick={() => updateSettings(DEFAULT_SETTINGS, true)} type='button'>\n          <RotateCcw />\n        Reset\n        </button>\n      </div>\n    );\n  }\n\n  updateProxy(url: string) {\n    this.props.updateSettings({corsProxy: url}, isUrl(url));\n  }\n\n  updateCharacter(key: string, string: string) {\n    const [character, valid] = fixCharacter(string);\n    this.props.updateSettings({[key]: character}, valid);\n  }\n}\n\nfunction fixCharacter(characters: string): [string, boolean] {\n  if (characters.length > 0) {\n    return [characters[characters.length - 1].toLowerCase(), true];\n  }\n  return ['', false];\n}\n\nfunction style(valid: boolean): {border: string} {\n  return {\n    border: `1px solid ${valid ? 'green' : 'red'}`\n  };\n}\n","import {EpisodeReference, Feeds, Playing} from './types';\nimport {episodeImage} from './utils';\n\nexport default class AudioPlayer {\n  audio: HTMLAudioElement;\n\n  epRef: EpisodeReference | null;\n\n  timer: number | null;\n\n  syncTimer: number | null;\n\n  refresh: () => void;\n\n  syncCallback: (playing: Playing) => void;\n\n  constructor(refresh: () => void, syncCallback: (playing: Playing) => void, seekAmount: number) {\n    this.audio = document.createElement('audio');\n    this.epRef = null;\n    this.timer = null;\n    this.syncTimer = null;\n\n    this.refresh = refresh;\n    this.syncCallback = syncCallback;\n\n    this.sync = this.sync.bind(this);\n    this.end = this.end.bind(this);\n\n    // Refresh on duration change (e.g. when it first loads)\n    this.audio.ondurationchange = refresh;\n    this.audio.onended = this.end;\n\n    if (navigator.mediaSession) {\n      navigator.mediaSession.setActionHandler('play',  this.play.bind(this));\n      navigator.mediaSession.setActionHandler('pause', this.pause.bind(this));\n      // todo: allow seek times to change\n      navigator.mediaSession.setActionHandler('seekbackward', () => this.seekRelative(-seekAmount));\n      navigator.mediaSession.setActionHandler('seekforward',  () => this.seekRelative(+seekAmount));\n    }\n  }\n\n  end() {\n    console.log('stopped');\n    this.pause();\n    if (navigator.mediaSession) navigator.mediaSession.playbackState = 'none';\n  }\n\n  getEpRef(): EpisodeReference | null {\n    return this.epRef;\n  }\n\n  loadEp(epRef: EpisodeReference, feeds: Feeds, playing: boolean, time: number) {\n    this.audio.src = epRef.episode.enclosure.url;\n    this.epRef = epRef;\n    this.audio.currentTime = time;\n\n    if (playing) {\n      this.playNoCallback();\n    } else {\n      this.pauseNoCallback();\n    }\n\n    if (navigator.mediaSession) {\n      const {meta} = feeds[epRef.feedUrl].data;\n\n      navigator.mediaSession.metadata = new MediaMetadata({\n        title: epRef.episode.title,\n        artist: meta.title,\n        artwork: [{src: episodeImage(epRef, feeds)}]\n      });\n    }\n\n    this.refresh();\n  }\n\n  isLoaded(): boolean {\n    return this.getEpRef() !== null;\n  }\n\n  isPaused(): boolean {\n    return this.audio.paused;\n  }\n\n  isPlaying(): boolean {\n    return !this.audio.paused;\n  }\n\n  toggle() {\n    if (this.audio.paused) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  }\n\n  sync() {\n    if (this.epRef !== null) this.syncCallback({epRef: this.epRef, time: this.time()});\n  }\n\n  playNoCallback() {\n    this.audio.play();\n\n    if (navigator.mediaSession) navigator.mediaSession.playbackState = 'playing';\n\n    this.timer = window.setInterval(this.refresh, 1000);\n    this.syncTimer = window.setInterval(this.sync, 30 * 1000);\n  }\n\n  pauseNoCallback() {\n    this.audio.pause();\n\n    if (navigator.mediaSession) navigator.mediaSession.playbackState = 'paused';\n\n    if (this.timer !== null) {\n      window.clearInterval(this.timer);\n      this.timer = null;\n    }\n\n    if (this.syncTimer !== null) {\n      window.clearInterval(this.syncTimer);\n      this.syncTimer = null;\n    }\n  }\n\n  play() {\n    this.playNoCallback();\n    this.refresh();\n  }\n\n  pause() {\n    this.pauseNoCallback();\n    this.refresh();\n    this.sync();\n  }\n\n  time(): number {\n    return this.audio.currentTime;\n  }\n\n  fraction(): number {\n    return this.time() / this.duration();\n  }\n\n  duration(): number {\n    return this.audio.duration || 0;\n  }\n\n  seekTo(time: number) {\n    this.audio.currentTime = time;\n    this.refresh();\n  }\n\n  seekRelative(value: number) {\n    this.seekTo(this.audio.currentTime + value);\n  }\n}\n","import {UserSession} from 'blockstack';\nimport update from 'immutability-helper';\nimport React, {Component, ReactElement} from 'react';\nimport {RefreshCw, Rss} from 'react-feather';\nimport { Textfit } from 'react-textfit';\nimport Hotkeys from 'react-hot-keys';\n\nimport Player from './Player';\nimport SideNav from './SideNav';\nimport {DEFAULT_SETTINGS, EpisodeReference, Feeds, Playing, Settings, View} from './types';\nimport {loadData, requestPodcast, saveData} from './utils';\nimport EpisodeView from './views/EpisodeView';\nimport FeedsView from './views/FeedsView';\nimport FeedView from './views/FeedView';\nimport SearchView from './views/SearchView';\nimport SettingsView from './views/SettingsView';\nimport AudioPlayer from './AudioPlayer';\n\nimport './index.scss';\n\nconst FEEDS_FILENAME = 'feeds.json';\nconst SETTINGS_FILENAME = 'settings.json';\nconst PLAYING_FILENAME = 'playing.json';\n\ninterface Props {\n  userSession: UserSession;\n  signOut: () => (void);\n}\n\ninterface State {\n  feeds: Feeds;\n  view: View;\n  viewing: string | EpisodeReference | undefined;\n  settings: Settings;\n  sidenavOpen: boolean;\n  loading: boolean;\n}\n\nexport default class Dashboard extends Component<Props, State> {\n  saveTimer: NodeJS.Timer | null = null;\n\n  audioPlayer: AudioPlayer;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      // Main State\n      feeds: {},\n      settings: DEFAULT_SETTINGS,\n      view: View.Feeds,\n      viewing: undefined,\n      sidenavOpen: false,\n      loading: false\n    };\n\n    this.refresh = this.refresh.bind(this);\n    this.addFeed = this.addFeed.bind(this);\n    this.playEpisode = this.playEpisode.bind(this);\n    this.deleteFeed = this.deleteFeed.bind(this);\n    this.updateSettings = this.updateSettings.bind(this);\n    this.sync = this.sync.bind(this);\n\n    this.audioPlayer = new AudioPlayer(\n      // Callback to refresh dashboard. Possibly hackier than it needs to be.\n      () => this.setState({}),\n      playing => this.savePlaying(playing),\n      this.state.settings.seekAmount\n    );\n  }\n\n  openHome     = ()                => this.setState({view: View.Feeds, sidenavOpen: false});\n\n  openSettings = ()                => this.setState({view: View.Settings, sidenavOpen: false});\n\n  openSearch   = ()                => this.setState({view: View.Search, sidenavOpen: false});\n\n  setSideNav   = (open: boolean)   => this.setState({sidenavOpen: open});\n\n  openViewing = (viewing: string | EpisodeReference) => this.setState({view: View.Viewing, viewing, sidenavOpen: false});\n\n\n  render() {\n    const {sidenavOpen, loading} = this.state;\n\n    // todo: consider putting loading rss feeds and blockstack data into the same button.\n    // do I even need to store feed data on server?\n\n    return (\n      <Hotkeys\n        keyName='*'\n        onKeyDown={(_key, e) => this.handleKey(e.key)}\n      >\n        <div className='dashboard'>\n          <div className='titlebar'>\n            <SideNav\n              open={sidenavOpen}\n              openHome={this.openHome}\n              openSettings={this.openSettings}\n              openSearch={this.openSearch}\n              changeState={this.setSideNav}\n              signOut={this.props.signOut}\n            />\n            <div className='title'>\n              <Textfit>\n                <p className='title-text'>{this.title()}</p>\n              </Textfit>\n            </div>\n            <div className='resync-button' title='Refresh blockstack data'>\n              <RefreshCw\n                onClick={this.sync}\n                style={loading ? {animation: 'spin 1.5s linear infinite'} : {}}\n              />\n            </div>\n            <div className='refresh-button' title='Update the feeds'>\n              <Rss onClick={this.refresh} />\n            </div>\n          </div>\n          <div className='main'>{this.inner()}</div>\n          <Player\n            {...this.state}\n            openEpisode={this.openViewing}\n            audioPlayer={this.audioPlayer}\n          />\n        </div>\n      </Hotkeys>\n    );\n  }\n\n  handleKey(key: string) {\n    const {toggle, seekBackwards, seekForwards, seekAmount} = this.state.settings;\n\n    if (key === toggle) {\n      this.audioPlayer.toggle();\n    }\n\n    if (key === seekBackwards) {\n      this.audioPlayer.seekRelative(-seekAmount);\n    }\n\n    if (key === seekForwards) {\n      this.audioPlayer.seekRelative(+seekAmount);\n    }\n  }\n\n  updateSettings(updates: Partial<Settings>, valid: boolean) {\n    this.setState(\n      {settings: update(this.state.settings, {$merge: updates})},\n      () => (valid ? this.saveSettings() : null)\n    );\n  }\n\n  title(): string {\n    const {view, viewing, feeds} = this.state;\n\n    if (view === View.Feeds) {\n      return 'Podcasts';\n    } if (view === View.Settings) {\n      return 'Settings';\n    } if (view === View.Search) {\n      return 'Search';\n    } if (view === View.Viewing) {\n      if (typeof viewing === 'string') {\n        return feeds[viewing].data.meta.title;\n      } if (typeof viewing !== 'undefined') {\n        return viewing.episode.title;\n      }\n      console.error('View set to viewing but this.state.viewing is undefined');\n      return '';\n    }\n    console.log(`View ${view} not handled in title()`);\n    return '';\n  }\n\n  inner(): ReactElement {\n    const {feeds, view, viewing, settings} = this.state;\n\n    if (view === View.Feeds) {\n      return (\n        <FeedsView\n          feeds={feeds}\n          openFeed={this.openViewing}\n          addFeed={this.addFeed}\n          deleteFeed={this.deleteFeed}\n        />\n      );\n    } if (view === View.Settings) {\n      return (\n        <SettingsView\n          settings={settings}\n          updateSettings={this.updateSettings}\n        />\n      );\n    } if (view === View.Viewing) {\n      if (typeof viewing === 'string') {\n        return (\n          <FeedView\n            feeds={feeds}\n            feedUrl={viewing}\n            playEpisode={this.playEpisode}\n            openEpisode={this.openViewing}\n          />\n        );\n      } if (typeof viewing !== 'undefined') {\n        return (\n          <EpisodeView\n            epRef={viewing}\n            {...this.state}\n            playEpisode={this.playEpisode}\n            audioPlayer={this.audioPlayer}\n          />\n        );\n      }\n      const error = 'View set to viewing but this.state.viewing is undefined';\n      console.error(error);\n      return <p>{error}</p>;\n    } if (view === View.Search) {\n      return (\n        <SearchView\n          feeds={feeds}\n          playEpisode={this.playEpisode}\n          openEpisode={this.openViewing}\n        />\n      );\n    }\n    const error = `View ${view} not handled in inner()`;\n    console.error(error);\n    return <p>{error}</p>;\n  }\n\n  playEpisode(epRef: EpisodeReference) {\n    this.audioPlayer.loadEp(epRef, this.state.feeds, true, 0);\n  }\n\n  async refresh() {\n    await Promise.all(\n      Object.keys(this.state.feeds)\n        .map(url => this.addFeed(url, false))\n    );\n    this.saveFeeds();\n  }\n\n  deleteFeed(url: string) {\n    const newFeeds = update(\n      this.state.feeds,\n      {$unset: [url]}\n    );\n\n    this.setState({feeds: newFeeds}, this.saveFeeds);\n  }\n\n  async addFeed(url: string, save?: boolean) {\n    const {settings, feeds} = this.state;\n\n    const data = await requestPodcast(settings.corsProxy, url);\n\n    const newFeeds = update(\n      feeds,\n      { $merge: {[url]: {time: Date.now(), data}} }\n    );\n\n    this.setState(\n      {feeds: newFeeds},\n      () => save || true ? this.saveFeeds() : null\n    );\n  }\n\n  saveFeeds() {\n    const {userSession} = this.props;\n    saveData(userSession, FEEDS_FILENAME, this.state.feeds);\n  }\n\n  saveSettings() {\n    const {userSession} = this.props;\n    saveData(userSession, SETTINGS_FILENAME, this.state.settings);\n  }\n\n  savePlaying(playing: Playing | undefined) {\n    const {userSession} = this.props;\n    saveData(userSession, PLAYING_FILENAME, playing);\n  }\n\n  sync() {\n    const {userSession} = this.props;\n\n    loadData<Settings>(userSession, SETTINGS_FILENAME)\n      .then(newSettings => this.setState({\n        // Merge in settings (convenient because it allows me to update whats in settings)\n        settings: update(this.state.settings, {$merge: newSettings})\n      }));\n\n    this.syncFeeds();\n  }\n\n  async syncFeeds() {\n    const {userSession} = this.props;\n\n    this.setState({loading: true});\n\n    const feedsPromise = loadData<Feeds>(userSession, FEEDS_FILENAME);\n    const playingPromise = loadData<Playing | undefined>(userSession, PLAYING_FILENAME);\n\n    // make sure we're set the feeds before setting playing\n    const feeds = await feedsPromise;\n    await this.setState({feeds});\n\n    const playing = await playingPromise;\n\n    if (playing) {\n      this.audioPlayer.loadEp(playing.epRef, feeds, false, playing.time);\n    }\n\n    this.setState({loading: false});\n  }\n\n  componentDidMount() {\n    this.sync();\n  }\n}\n"],"sourceRoot":""}