{"version":3,"sources":["utils.tsx","Player.tsx","SideNavItem.tsx","types.tsx","SideNav.tsx","views/EpisodeView.tsx","TextEntry.tsx","Item.tsx","FeedItem.tsx","views/FeedsView.tsx","EpisodeItem.tsx","views/FeedView.tsx","views/SearchView.tsx","views/SettingsView.tsx","Dashboard.tsx","serviceWorker.ts","Picture.tsx","Signin.tsx","index.tsx"],"names":["options","fields","meta","episodes","required","requestPodcast","proxy","url","a","console","log","combined","endsWith","getPodcastFromURL","saveData","userSession","filename","data","putFile","JSON","stringify","loadData","getFile","then","content","ArrayBuffer","parse","episodeImage","ref","feeds","episode","imageURL","feedUrl","timestamp","secs","hours","Math","floor","minutes","seconds","pad","value","toString","padStart","Player","this","props","playing","updatePlaying","duration","endPlaying","seekAmount","settings","paused","epRef","className","time","percentage","style","width","playerBar","src","alt","title","playerButton","onClick","seek","type","min","max","step","onChange","e","target","dangerouslySetInnerHTML","__html","description","enclosure","undefined","listenInterval","onListen","onLoad","audio","setDuration","onEnded","relative","Component","SideNavItem","icon","text","View","SideNav","open","openSettings","openHome","openFeed","openSearch","changeState","signOut","isOpen","customBurgerIcon","onStateChange","state","Object","entries","map","feed","key","preventDefault","stopPropagation","DEFAULT_SETTINGS","corsProxy","toggle","seekBackwards","seekForwards","EpisodeView","player","playingDuration","same","size","button","playEpisode","TextEntry","entered","defaultValue","handleKey","bind","setState","onKeyDown","placeholder","callback","Item","image","body","icons","FeedItem","deleteFeed","length","moment","fromNow","FeedsView","addFeed","keys","EpisodeItem","openEpisode","pubDate","format","FeedView","guid","PureComponent","SearchView","searchTerm","flatMap","episodeTitle","episodeDescription","renderedEpisodes","fuzzysort","go","limit","threshold","result","obj","SettingsView","updateSettings","href","pattern","updateProxy","isUrl","fixCharacter","updateCharacter","string","character","valid","characters","toLowerCase","border","Dashboard","saveTimer","view","Feeds","viewing","sidenavOpen","refresh","savePlaying","keyName","_key","_handle","Viewing","Settings","Search","inner","_prevProps","prevState","statePlaying","setInterval","clearInterval","updates","update","$merge","saveSettings","error","Promise","all","saveFeeds","$unset","Date","now","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","Picture","srcSet","Signin","signIn","tryAnonymously","blockstack","appConfig","AppConfig","manifestPath","redirectPath","manifestURI","redirectURI","UserSession","language","App","anonymous","isUserSignedIn","signUserOut","redirectToSignIn","isSignInPending","handlePendingSignIn","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9167117b.chunk.js","sourcesContent":["import {UserSession} from 'blockstack';\nimport {getPodcastFromURL} from 'podcast-feed-parser';\nimport {EpisodeReference, Feed, Feeds} from './types';\n\n// https://github.com/jbierfeldt/podcast-feed-parser/blob/master/index.js#L17\nconst options = {\n  fields: {\n    meta: ['title', 'description', 'imageURL'],\n    episodes: ['title', 'description', 'imageURL', 'pubDate', 'enclosure', 'duration', 'guid']\n  },\n\n  required: {\n    meta: ['title', 'description'],\n    episodes: []\n  }\n};\n\nexport async function requestPodcast(proxy: string, url: string): Promise<Feed> {\n  console.log(`Requesting '${url}' via '${proxy}'`);\n  const combined = proxy.endsWith('/') ? proxy + url : `${proxy}/${url}`;\n  return getPodcastFromURL(combined, options);\n}\n\nexport function saveData<T>(userSession: UserSession, filename: string, data: T): Promise<string> {\n  return userSession.putFile(filename, JSON.stringify(data), {});\n}\n\nexport async function loadData<T>(userSession: UserSession, filename: string): Promise<T> {\n  return userSession.getFile(filename, {})\n    .then(content => {\n      if (content instanceof ArrayBuffer) {\n        // todo: error\n        return {};\n      }\n      return JSON.parse(content) || {};\n    });\n}\n\nexport function episodeImage(ref: EpisodeReference, feeds: Feeds): string {\n  return ref.episode.imageURL || feeds[ref.feedUrl].data.meta.imageURL;\n}\n\nexport function timestamp(secs: number): string {\n  const hours = Math.floor(secs / 3600);\n  const minutes = Math.floor((secs - (hours * 3600)) / 60);\n  const seconds = Math.floor(secs % 60);\n\n  return `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;\n}\n\nfunction pad(value: number): string {\n  return value.toString().padStart(2, '0');\n}\n","import React, {Component, ReactElement} from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport {FastForward, Pause, Play, Rewind} from 'react-feather';\nimport {Feeds, Playing, Settings} from './types';\nimport {episodeImage, timestamp} from './utils';\n\nimport './Player.scss';\n\ninterface Props {\n  playing: Playing | undefined;\n  feeds: Feeds;\n  duration: number | undefined;\n  updatePlaying: (update: object) => void;\n  setDuration: (duration: number) => void;\n  endPlaying: () => void;\n  settings: Settings;\n}\n\nfunction playerBar(time: number, duration: number | undefined) {\n  let percentage = 0;\n\n  if (duration) {\n    const fraction = time / duration;\n    percentage = fraction * 100;\n  }\n\n  return (\n    <div className='player-bar-inner'>\n      <div className='player-bar-progress' style={{width: `${percentage}%`}} />\n    </div>\n  );\n}\n\nexport default class Player extends Component<Props> {\n  render() {\n    const {playing, feeds, updatePlaying, duration, endPlaying} = this.props;\n    const {seekAmount} = this.props.settings;\n\n    // Eww\n    const paused = playing ? playing.paused : true;\n    const epRef = playing ? playing.epRef : null;\n    const episode = epRef ? epRef.episode : null;\n\n    return (\n      <div className='player'>\n        <div className='player-bar'>\n          {playerBar(this.time(), duration)}\n        </div>\n        <div className='player-image'>\n          {epRef ? <img src={episodeImage(epRef, this.props.feeds)} alt='' /> : null}\n        </div>\n        <div className='player-description'>\n          <div>\n            <p className=\"player-description-title\">\n              {episode ? episode.title : null}\n            </p>\n            <p>{epRef ? feeds[epRef.feedUrl].data.meta.title : null}</p>\n          </div>\n        </div>\n        <div className='player-button'>\n          {this.playerButton()}\n        </div>\n        <div className='desktop-player'>\n          <Rewind onClick={() => this.seek(-seekAmount)} />\n          {this.playerButton()}\n          <FastForward onClick={() => this.seek(+seekAmount)} />\n          <p>{timestamp(this.time())}</p>\n          <input\n            className='player-range-bar'\n            type='range'\n            min='0'\n            value={this.time()}\n            max={duration || 0}\n            step='any'\n            onChange={e => updatePlaying({time: e.target.value})}\n          />\n          <p>{timestamp(duration || 0)}</p>\n        </div>\n        <div className='desktop-player-description'>\n          <h2>{episode ? episode.title : null}</h2>\n          <h3>{epRef ? feeds[epRef.feedUrl].data.meta.title : null}</h3>\n          <p\n            dangerouslySetInnerHTML={{__html: episode ? episode.description : ''}}\n          />\n        </div>\n        <ReactAudioPlayer\n          time={this.time()}\n          playing={!paused}\n          src={episode ? episode.enclosure.url : undefined}\n          listenInterval={100}\n          onListen={(time: number) => this.props.updatePlaying({time})}\n          onLoad={audio => this.props.setDuration(audio.duration)}\n          onEnded={endPlaying}\n        />\n      </div>\n    );\n  }\n\n  seek(relative: number) {\n    const {playing, updatePlaying} = this.props;\n\n    if (playing) {\n      updatePlaying({time: playing.time + relative});\n    }\n  }\n\n  time(): number {\n    return this.props.playing ? this.props.playing.time : 0;\n  }\n\n  playerButton(): ReactElement | undefined {\n    const {playing, updatePlaying} = this.props;\n\n    if (playing) {\n      if (playing.paused) {\n        return <Play onClick={() => updatePlaying({paused: false})} />;\n      }\n      return <Pause onClick={() => updatePlaying({paused: true})} />;\n    }\n\n    return <Play />;\n  }\n}\n","import React, {MouseEvent, ReactElement} from 'react';\n\ninterface Props {\n  icon: ReactElement;\n  text: string;\n  onClick: (e: MouseEvent) => void;\n}\n\nexport default function SideNavItem(props: Props): ReactElement {\n  const {onClick, icon, text} = props;\n\n  return (\n    <div\n      onClick={onClick}\n      className='sidenav-item'\n    >\n      <div className='sidenav-icon'>\n        {icon}\n      </div>\n      <p>{text}</p>\n    </div>\n  );\n}\n","export interface FeedState {data: Feed; time: Date }\nexport type Feeds = Record<string, FeedState>;\n\nexport enum View {\n  Feeds = 'Feeds',\n  Settings = 'Settings',\n  Viewing = 'Viewing',\n  Search = 'Search',\n}\n\nexport interface EpisodeReference {\n  feedUrl: string;\n  episode: Episode;\n}\n\nexport interface Feed {\n  meta: {\n    title: string;\n    description: string;\n    imageURL: string;\n  };\n  episodes: Episode[];\n}\n\nexport interface Episode {\n  title: string;\n  description: string;\n  pubDate: string;\n  enclosure: {\n    length: number;\n    type: string;\n    url: string;\n  };\n  guid: string;\n  duration: string | null;\n  imageURL: string | null;\n}\n\nexport interface Playing {\n  epRef: EpisodeReference;\n  time: number;\n  paused: boolean;\n}\n\nexport interface Settings {\n  corsProxy: string;\n  toggle: string;\n  seekBackwards: string;\n  seekForwards: string;\n  seekAmount: number;\n}\n\nexport const DEFAULT_SETTINGS = {\n  corsProxy: 'https://caster-cors-proxy.herokuapp.com',\n  toggle: 'p',\n  seekBackwards: ',',\n  seekForwards: '.',\n  seekAmount: 5\n};\n","import React from 'react';\n\nimport { slide as Slide } from 'react-burger-menu';\nimport {Home, LogOut, Menu, Search, Settings} from 'react-feather';\nimport SideNavItem from './SideNavItem';\nimport {Feeds} from './types';\n\nimport './SideNav.scss';\n\ninterface Props {\n  open: boolean;\n  changeState: (open: boolean) => void;\n  feeds: Feeds;\n  openSettings: () => void;\n  openHome: () => void;\n  openFeed: (url: string) => void;\n  openSearch: () => void;\n  signOut: () => void;\n}\n\nexport default function SideNav(props: Props) {\n  const {\n    open, feeds, openSettings, openHome, openFeed, openSearch, changeState, signOut\n  } = props;\n\n  return (\n    <div className='menu-button'>\n      <Slide\n        isOpen={open}\n        customBurgerIcon={<Menu />}\n        onStateChange={state => changeState(state.isOpen)}\n      >\n        <SideNavItem icon={<Home />} text='Home' onClick={openHome} />\n        <SideNavItem icon={<Search />} text='Search' onClick={openSearch} />\n        {\n        Object.entries(feeds).map(([url, feed]) => (\n          <SideNavItem\n            key={url}\n            icon={<img src={feed.data.meta.imageURL} alt='' />}\n            text={feed.data.meta.title}\n            onClick={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              openFeed(url);\n            }}\n          />\n        ))\n      }\n        <SideNavItem icon={<Settings />} text='Settings' onClick={openSettings} />\n        <SideNavItem icon={<LogOut />} text='Sign Out' onClick={signOut} />\n      </Slide>\n    </div>\n  );\n}\n","import React, {Component, ReactElement} from 'react';\nimport {FastForward, Pause, Play, Rewind} from 'react-feather';\nimport {EpisodeReference, Feeds, Playing, Settings} from '../types';\nimport {episodeImage, timestamp} from '../utils';\n\nimport './EpisodeView.scss';\n\ninterface Props {\n  epRef: EpisodeReference;\n  feeds: Feeds;\n  playEpisode: (ref: EpisodeReference) => void;\n  playing: Playing | undefined;\n  playingDuration: number | undefined;\n  updatePlaying: (updates: object) => void;\n  settings: Settings;\n}\n\nexport default class EpisodeView extends Component<Props> {\n  render() {\n    const {epRef, feeds} = this.props;\n\n    return (\n      <div className='episode-view'>\n        <h1>{epRef.episode.title}</h1>\n        <h2>{feeds[epRef.feedUrl].data.meta.title}</h2>\n        <img src={episodeImage(epRef, feeds)} alt='' />\n        <p dangerouslySetInnerHTML={{__html: epRef.episode.description}} />\n        {this.player()}\n      </div>\n    );\n  }\n\n  player(): ReactElement {\n    const {epRef, updatePlaying, playingDuration} = this.props;\n    const same = this.props.playing ? this.props.playing.epRef === epRef : false;\n    const {seekAmount} = this.props.settings;\n\n    if (this.props.playing !== undefined && same) {\n      const {playing} = this.props;\n\n      return (\n        <div className='episode-player'>\n          <p>{timestamp(playing.time)}</p>\n          <Rewind onClick={() => updatePlaying({time: playing.time - seekAmount})} size='32px' />\n          {this.button()}\n          <FastForward onClick={() => updatePlaying({time: playing.time + seekAmount})} size='32px' />\n          <p>{timestamp(playingDuration || 0)}</p>\n        </div>\n      );\n    }\n    return (\n      <div className='episode-player'>\n        <Rewind size='32px' />\n        {this.button()}\n        <FastForward size='32px' />\n      </div>\n    );\n  }\n\n  button(): ReactElement {\n    const {playing, updatePlaying, playEpisode, epRef} = this.props;\n\n    if (playing !== undefined && playing.epRef === epRef) {\n      if (playing.paused) {\n        return <Play onClick={() => updatePlaying({paused: false})} size='36px' />;\n      }\n      return <Pause onClick={() => updatePlaying({paused: true})} size='36px' />;\n    }\n    return <Play onClick={() => playEpisode(epRef)} size='36px' />;\n  }\n}\n","import React, { Component, KeyboardEvent } from 'react';\n\ninterface Props {\n  defaultValue?: string;\n  className?: string;\n  placeholder?: string;\n  callback: (value: string) => void;\n}\n\nexport default class TextEntry extends Component<Props, {entered: string}> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {entered: props.defaultValue || ''};\n\n    this.handleKey = this.handleKey.bind(this);\n  }\n\n  render() {\n    return (\n      <input\n        type='text'\n        value={this.state.entered}\n        className={this.props.className}\n        onChange={e => this.setState({entered: e.target.value})}\n        onKeyDown={this.handleKey}\n        placeholder={this.props.placeholder}\n      />\n    );\n  }\n\n  handleKey(e: KeyboardEvent) {\n    e.stopPropagation();\n\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    const {entered} = this.state;\n\n    if (entered) {\n      this.setState({entered: ''});\n      this.props.callback(entered);\n    }\n  }\n}\n","import React, {ReactElement} from 'react';\nimport './Item.scss';\n\ninterface Props {\n  image: string;\n  title: string;\n  body: ReactElement | string;\n  onClick?: () => void;\n  icons?: ReactElement;\n  className?: string;\n}\n\nexport default function Item(props: Props) {\n  const {className, onClick, image, title, body, icons} = props;\n\n  return (\n    <div className={`item ${className}`} onClick={onClick}>\n      <div className='item-image'>\n        <img src={image} alt='' />\n      </div>\n      <div className='item-inner'>\n        <h2>{title}</h2>\n        {body}\n      </div>\n      <div className='item-icons'>\n        {icons}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {XCircle} from 'react-feather';\nimport moment from 'moment';\nimport {Feeds} from './types';\nimport Item from './Item';\n\ninterface Props {\n  feeds: Feeds;\n  url: string;\n  openFeed: (url: string) => void;\n  deleteFeed: (url: string) => void;\n}\n\nexport default function FeedItem(props: Props) {\n  const {feeds, url, openFeed, deleteFeed} = props;\n  const feed = feeds[url].data;\n\n  return (\n    <Item\n      title={feed.meta.title}\n      image={feed.meta.imageURL}\n      body={(\n        <>\n          <p>{feed.meta.description}</p>\n          <p>{feed.episodes.length} episodes</p>\n          <p>Last refreshed {moment(feeds[url].time).fromNow()}</p>\n        </>\n    )}\n      onClick={() => openFeed(url)}\n      icons={(\n        <XCircle onClick={e => {\n          e.stopPropagation();\n          deleteFeed(url);\n        }}\n        />\n    )}\n    />\n  );\n}\n","import React from 'react';\n// import {Plus} from 'react-feather';\nimport TextEntry from '../TextEntry';\nimport {Feeds} from '../types';\nimport FeedItem from '../FeedItem';\n\nimport './FeedsView.scss';\n\ninterface Props {\n  feeds: Feeds;\n  openFeed: (url: string) => void;\n  addFeed: (url: string) => void;\n  deleteFeed: (url: string) => void;\n}\n\nexport default function FeedsView(props: Props) {\n  const {feeds, openFeed, addFeed, deleteFeed} = props;\n\n  return (\n    <>\n      {\n        Object.keys(feeds)\n          .map(url => (\n            <FeedItem\n              key={url}\n              url={url}\n              feeds={feeds}\n              openFeed={openFeed}\n              deleteFeed={deleteFeed}\n            />\n          ))\n      }\n      <div className='add-feed'>\n        <TextEntry placeholder='Podcast Feed URL' callback={addFeed} />\n        {/* <div className='add-feed-button' onClick={addFeed}><Plus /></div> */}\n      </div>\n    </>\n  );\n}\n","import moment from 'moment';\nimport React from 'react';\nimport {MoreHorizontal, Play} from 'react-feather';\nimport Item from './Item';\nimport {EpisodeReference, Feeds} from './types';\nimport {episodeImage} from './utils';\n\ninterface Props {\n  episode: EpisodeReference;\n  feeds: Feeds;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\nexport default function EpisodeItem(props: Props) {\n  const {episode, feeds, openEpisode, playEpisode} = props;\n\n  return (\n    <Item\n      title={episode.episode.title}\n      image={episodeImage(episode, feeds)}\n      body={moment(episode.episode.pubDate).format('L LT')}\n      icons={(\n        <>\n          <Play onClick={() => playEpisode(episode)} />\n          <MoreHorizontal onClick={() => openEpisode(episode)} />\n        </>\n      )}\n      className='episode'\n    />\n  );\n}\n","import React, {PureComponent} from 'react';\n\nimport EpisodeItem from '../EpisodeItem';\nimport {EpisodeReference, Feeds} from '../types';\n\ninterface Props {\n  feeds: Feeds;\n  feedUrl: string;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\nexport default class FeedView extends PureComponent<Props> {\n  render() {\n    const {feeds, feedUrl, openEpisode, playEpisode} = this.props;\n\n    return feeds[feedUrl].data.episodes.map(episode => (\n      <EpisodeItem\n        key={episode.guid}\n        episode={{episode, feedUrl}}\n        feeds={feeds}\n        openEpisode={openEpisode}\n        playEpisode={playEpisode}\n      />\n    ));\n  }\n}\n","import fuzzysort from 'fuzzysort';\nimport React, {PureComponent} from 'react';\nimport {Search} from 'react-feather';\nimport EpisodeItem from '../EpisodeItem';\nimport {EpisodeReference, Feeds} from '../types';\n\nimport './SearchView.scss';\n\ninterface Props {\n  feeds: Feeds;\n  openEpisode: (ref: EpisodeReference) => void;\n  playEpisode: (ref: EpisodeReference) => void;\n}\n\ninterface State {\n  searchTerm: string;\n}\n\nexport default class SearchView extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      searchTerm: ''\n    };\n  }\n\n  render() {\n    const {feeds} = this.props;\n\n    const episodes = Object.keys(feeds)\n      .flatMap(feedUrl => feeds[feedUrl].data.episodes.map(episode => ({\n        ref: {episode, feedUrl},\n        episodeTitle: episode.title,\n        episodeDescription: episode.description\n      })));\n\n    const options = {\n      limit: 50,\n      keys: ['episodeTitle', 'episodeDescription'],\n      threshold: -500\n    };\n\n    const renderedEpisodes = fuzzysort.go(this.state.searchTerm, episodes, options)\n      .map(result => (\n        <EpisodeItem\n          key={result.obj.ref.episode.guid}\n          episode={result.obj.ref}\n          feeds={feeds}\n          openEpisode={this.props.openEpisode}\n          playEpisode={this.props.playEpisode}\n        />\n      ));\n\n    return (\n      <div className='search'>\n        <div className='search-body'>\n          {renderedEpisodes.length ? renderedEpisodes : <h1>No Search Term Entered</h1>}\n        </div>\n        <div className='search-input'>\n          <Search />\n          <input\n            type='text'\n            placeholder='Search Term'\n            onChange={e => this.setState({searchTerm: e.target.value})}\n            value={this.state.searchTerm}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component, ReactElement} from 'react';\nimport {RotateCcw} from 'react-feather';\n\nimport isUrl from 'is-url-superb';\nimport {DEFAULT_SETTINGS, Settings} from '../types';\n\n\nimport './SettingsView.scss';\n\ninterface Props {\n  settings: Settings;\n  updateSettings: (updates: object, valid: boolean) => void;\n}\n\nexport default class SettingsView extends Component<Props> {\n  render(): ReactElement {\n    const {settings, updateSettings} = this.props;\n    const {corsProxy, toggle, seekBackwards, seekForwards} = settings;\n\n    const helpUrl = 'https://devcenter.heroku.com/articles/getting-started-with-nodejs';\n    const defaultUrl = 'https://caster-cors-proxy.herokuapp.com';\n    const corsAnywhere = 'https://caster-cors-proxy.herokuapp.com';\n\n    return (\n      <div className='settings'>\n        <p>Many websites do not allow you to request RSS feeds from inside a browser, so you need to use a proxy to access them. I've set up {defaultUrl} which you are totally free to use, but if you want to setup a proxy yourself you can follow <a href={helpUrl}>this guide</a> with the <a href={corsAnywhere}>CORS Anywhere</a>.</p>\n        <label>CORS Proxy:</label>\n        <input\n          type='url'\n          pattern='https?://.*'\n          value={corsProxy}\n          onChange={e => this.updateProxy(e.target.value)}\n          style={style(isUrl(corsProxy))}\n        />\n        <label>Pause/Play Toggle:</label>\n        <input\n          type='text'\n          value={toggle}\n          style={style(fixCharacter(toggle)[1])}\n          onChange={e => this.updateCharacter('toggle', e.target.value)}\n        />\n        <label>Seek Backwards:</label>\n        <input\n          type='text'\n          value={seekBackwards}\n          style={style(fixCharacter(seekBackwards)[1])}\n          onChange={e => this.updateCharacter('seekBackwards', e.target.value)}\n        />\n        <label>Seek Forwards:</label>\n        <input\n          type='text'\n          value={seekForwards}\n          style={style(fixCharacter(seekForwards)[1])}\n          onChange={e => this.updateCharacter('seekForwards', e.target.value)}\n        />\n        <button\n          type='reset'\n          onClick={() => updateSettings(DEFAULT_SETTINGS, true)}\n        >\n          <RotateCcw />\n        Reset\n        </button>\n      </div>\n    );\n  }\n\n  updateProxy(url: string) {\n    this.props.updateSettings({corsProxy: url}, isUrl(url));\n  }\n\n  updateCharacter(key: string, string: string) {\n    const [character, valid] = fixCharacter(string);\n    this.props.updateSettings({[key]: character}, valid);\n  }\n}\n\nfunction fixCharacter(characters: string): [string, boolean] {\n  if (characters.length > 0) {\n    return [characters[characters.length - 1].toLowerCase(), true];\n  }\n  return ['', false];\n}\n\nfunction style(valid: boolean): {border: string} {\n  return {\n    border: `1px solid ${valid ? 'green' : 'red'}`\n  };\n}\n","import {UserSession} from 'blockstack';\nimport update from 'immutability-helper';\nimport React, {Component, ReactElement} from 'react';\nimport {RefreshCw} from 'react-feather';\nimport { Textfit } from 'react-textfit';\nimport Hotkeys from 'react-hot-keys';\n\nimport Player from './Player';\nimport SideNav from './SideNav';\nimport {DEFAULT_SETTINGS, EpisodeReference, Feeds, Playing, Settings, View} from './types';\nimport {loadData, requestPodcast, saveData} from './utils';\nimport EpisodeView from './views/EpisodeView';\nimport FeedsView from './views/FeedsView';\nimport FeedView from './views/FeedView';\nimport SearchView from './views/SearchView';\nimport SettingsView from './views/SettingsView';\n\nimport './Dashboard.scss';\n\nconst FEEDS_FILENAME = 'feeds.json';\nconst SETTINGS_FILENAME = 'settings.json';\nconst PLAYING_FILENAME = 'playing.json';\n\ninterface Props {\n  userSession: UserSession;\n  signOut: () => (void);\n}\n\ninterface State {\n  feeds: Feeds;\n  view: View;\n  playing: Playing | undefined;\n  playingDuration: number | undefined;\n  viewing: string | EpisodeReference | undefined;\n  settings: Settings;\n  sidenavOpen: boolean;\n}\n\nexport default class Dashboard extends Component<Props, State> {\n  saveTimer: NodeJS.Timer | null = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      // Main State\n      feeds: {},\n      settings: DEFAULT_SETTINGS,\n      view: View.Feeds,\n      playing: undefined,\n      playingDuration: undefined,\n      viewing: undefined,\n      sidenavOpen: false\n    };\n\n    this.refresh = this.refresh.bind(this);\n    this.addFeed = this.addFeed.bind(this);\n    this.openEpisode = this.openEpisode.bind(this);\n    this.playEpisode = this.playEpisode.bind(this);\n    this.updatePlaying = this.updatePlaying.bind(this);\n    this.deleteFeed = this.deleteFeed.bind(this);\n    this.updateSettings = this.updateSettings.bind(this);\n    this.savePlaying = this.savePlaying.bind(this);\n  }\n\n  render() {\n    return (\n      <Hotkeys\n        keyName='*'\n        onKeyDown={(_key, e, _handle) => this.handleKey(e.key)}\n      >\n        <div className='dashboard'>\n          <div className='titlebar'>\n            <SideNav\n              open={this.state.sidenavOpen}\n              feeds={this.state.feeds}\n              openHome={() => this.setState({view: View.Feeds, sidenavOpen: false})}\n              openFeed={viewing => this.setState({view: View.Viewing, viewing, sidenavOpen: false})}\n              openSettings={() => this.setState({view: View.Settings, sidenavOpen: false})}\n              openSearch={() => this.setState({view: View.Search, sidenavOpen: false})}\n              changeState={open => this.setState({sidenavOpen: open})}\n              signOut={this.props.signOut}\n            />\n            <div className='title'>\n              <Textfit>\n                <p className='title-text'>{this.title()}</p>\n              </Textfit>\n            </div>\n            <div className='refresh-button'>\n              <RefreshCw onClick={this.refresh} />\n            </div>\n          </div>\n          <div className='main'>{this.inner()}</div>\n          <Player\n            playing={this.state.playing}\n            feeds={this.state.feeds}\n            duration={this.state.playingDuration}\n            updatePlaying={this.updatePlaying}\n            settings={this.state.settings}\n            setDuration={playingDuration => this.setState({playingDuration})}\n            endPlaying={() => this.updatePlaying({paused: true})}\n          />\n        </div>\n      </Hotkeys>\n    );\n  }\n\n  handleKey(key: string) {\n    const {playing, settings} = this.state;\n    const {toggle, seekBackwards, seekForwards, seekAmount} = settings;\n\n    if (playing) {\n      if (key === toggle) {\n        this.updatePlaying({paused: !playing.paused});\n      }\n\n      if (key === seekBackwards) {\n        this.updatePlaying({time: playing.time - seekAmount});\n      }\n\n      if (key === seekForwards) {\n        this.updatePlaying({time: playing.time + seekAmount});\n      }\n    }\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    const statePlaying = (state: State) => state.playing && !state.playing.paused;\n\n    if (!statePlaying(prevState) && statePlaying(this.state)) {\n      this.savePlaying();\n      this.saveTimer = setInterval(this.savePlaying, 60000);\n    }\n\n    if (statePlaying(prevState) && !statePlaying(this.state)) {\n      if (this.saveTimer) {\n        clearInterval(this.saveTimer);\n        this.saveTimer = null;\n      }\n\n      this.savePlaying();\n    }\n  }\n\n  updateSettings(updates: object, valid: boolean) {\n    this.setState(\n      {settings: update(this.state.settings, {$merge: updates})},\n      () => (valid ? this.saveSettings() : null)\n    );\n  }\n\n  updatePlaying(updates: object) {\n    if (this.state.playing === undefined) {\n      return;\n    }\n\n    this.setState(\n      {playing: update(this.state.playing, {$merge: updates})}\n    );\n  }\n\n  title(): string {\n    const {view, viewing, feeds} = this.state;\n\n    if (view === View.Feeds) {\n      return 'Podcasts';\n    } if (view === View.Settings) {\n      return 'Settings';\n    } if (view === View.Search) {\n      return 'Search';\n    } if (view === View.Viewing) {\n      if (typeof viewing === 'string') {\n        return feeds[viewing].data.meta.title;\n      } if (typeof viewing !== 'undefined') {\n        return viewing.episode.title;\n      }\n      console.error('View set to viewing but this.state.viewing is undefined');\n      return '';\n    }\n    console.log(`View ${view} not handled in title()`);\n    return '';\n  }\n\n  inner(): ReactElement | ReactElement[] {\n    const {feeds, view, playing, viewing, settings} = this.state;\n\n    if (view === View.Feeds) {\n      return (\n        <FeedsView\n          feeds={feeds}\n          openFeed={feed => this.setState({viewing: feed, view: View.Viewing})}\n          addFeed={this.addFeed}\n          deleteFeed={this.deleteFeed}\n        />\n      );\n    } if (view === View.Settings) {\n      return (\n        <SettingsView\n          settings={settings}\n          updateSettings={this.updateSettings}\n        />\n      );\n    } if (view === View.Viewing) {\n      if (typeof viewing === 'string') {\n        return (\n          <FeedView\n            feedUrl={viewing}\n            feeds={feeds}\n            openEpisode={this.openEpisode}\n            playEpisode={this.playEpisode}\n          />\n        );\n      } if (typeof viewing !== 'undefined') {\n        return (\n          <EpisodeView\n            epRef={viewing}\n            feeds={feeds}\n            playEpisode={this.playEpisode}\n            playing={playing}\n            playingDuration={this.state.playingDuration}\n            updatePlaying={this.updatePlaying}\n            settings={settings}\n          />\n        );\n      }\n      const error = 'View set to viewing but this.state.viewing is undefined';\n      console.error(error);\n      return <p>{error}</p>;\n    } if (view === View.Search) {\n      return (\n        <SearchView\n          feeds={this.state.feeds}\n          openEpisode={this.openEpisode}\n          playEpisode={this.playEpisode}\n        />\n      );\n    }\n    const error = `View ${view} not handled in inner()`;\n    console.error(error);\n    return <p>{error}</p>;\n  }\n\n  playEpisode(epRef: EpisodeReference) {\n    this.setState({playing: {epRef, time: 0, paused: false}});\n  }\n\n  async refresh() {\n    await Promise.all(Object.keys(this.state.feeds).map(this.addFeed));\n    this.saveFeeds();\n  }\n\n  deleteFeed(url: string) {\n    const feeds = update(\n      this.state.feeds,\n      {$unset: [url]}\n    );\n\n    this.setState({feeds}, this.saveFeeds);\n  }\n\n  openEpisode(viewing: EpisodeReference) {\n    this.setState({viewing, view: View.Viewing});\n  }\n\n  clearFeeds() {\n    this.setState({feeds: {}}, this.saveFeeds);\n  }\n\n  async addFeed(url: string) {\n    return requestPodcast(this.state.settings.corsProxy, url)\n      .then(data => {\n        const feeds = update(\n          this.state.feeds,\n          { $merge: {[url]: {time: Date.now(), data}} }\n        );\n        return this.setState({feeds});\n      })\n      .then(() => this.saveFeeds());\n  }\n\n  saveFeeds() {\n    saveData(this.props.userSession, FEEDS_FILENAME, this.state.feeds);\n  }\n\n  saveSettings() {\n    saveData(this.props.userSession, SETTINGS_FILENAME, this.state.settings);\n  }\n\n  savePlaying() {\n    saveData(this.props.userSession, PLAYING_FILENAME, this.state.playing);\n  }\n\n  componentDidMount() {\n    const {userSession} = this.props;\n\n    loadData<Feeds>(userSession, FEEDS_FILENAME)\n      .then(feeds => this.setState({feeds}))\n      .then(() => loadData<Playing | undefined>(userSession, PLAYING_FILENAME))\n      .then(playing => this.setState({playing}));\n\n    loadData<Settings>(userSession, SETTINGS_FILENAME)\n      .then(settings => this.setState({\n        // Merge in settings (convenient because it allows me to update whats in settings)\n        settings: update(this.state.settings, {$merge: settings})\n      }));\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\ninterface Props {\n  className?: string;\n  src: string;\n}\n\nexport default function Picture(props: Props) {\n  return (\n    <picture className={props.className}>\n      <source srcSet={`${props.src}.webp`} type='image/webp' />\n      <source srcSet={`${props.src}.png`} type='image/png' />\n      <img src={`${props.src}.png`} alt='' />\n    </picture>\n  );\n}\n","import React from 'react';\nimport {CloudOff, Key} from 'react-feather';\n\nimport './Signin.scss';\nimport Picture from './Picture';\n\ninterface Props {\n  signIn: () => void;\n  tryAnonymously: () => void;\n}\n\nexport default function Signin(props: Props) {\n  const {signIn, tryAnonymously} = props;\n  const blockstack = <a href='https://blockstack.org/'>Blockstack</a>;\n  const tryBlockstack = 'https://blockstack.org/try-blockstack';\n\n  return (\n    <div className='signin'>\n      <div className='signin-inner'>\n        <h1>Caster is a encrypted, decentralised, syncing podcast player</h1>\n        <p>(That's a mouthful)</p>\n        <div className='intro'>\n          <Picture className='intro-image' src='mobile_30_08_2019' />\n          <div className='intro-text'>\n            <h2>Here's how it works:</h2>\n            <p>You can try out Caster by clicking the button below. In order to sync podcasts though, you'll need a {blockstack} identity. Making one is the same as signing up for any other online account, a process you've probably done hundreds of times.</p>\n            <p>This will provide you with a <a href={tryBlockstack}>universal login</a> which you can use to access any Blockstack app. You'll also get a private encryption key, which is used to encrypt infomation about your podcast feeds.</p>\n            <button onClick={signIn} type='button'>\n              <Key />Create ID/Log In\n            </button>\n            <button onClick={tryAnonymously} type='button'>\n              <CloudOff />Try without making an ID\n            </button>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n","import {AppConfig, UserSession} from 'blockstack';\nimport * as moment from 'moment';\nimport 'moment/min/locales';\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from './Dashboard';\nimport * as serviceWorker from './serviceWorker';\nimport Signin from './Signin';\n\n// type definitions for js modules\nimport './podcast-feed-parser.d.ts';\nimport './react-scale-text.d.ts';\nimport './react-textfit.d.ts';\n// css\nimport './styling/basic.scss';\n\n// todo: testing\n\nconst appConfig = new AppConfig();\nif (process.env.NODE_ENV === 'production') {\n  appConfig.manifestPath = '/caster/manifest.json';\n  appConfig.redirectPath = '/caster';\n}\n\nconsole.log(`Manifest path: ${appConfig.manifestURI()}`);\nconsole.log(`Redirect path: ${appConfig.redirectURI()}`);\n\nconst userSession = new UserSession({appConfig});\n// set locale\nmoment.locale(window.navigator.language);\n\ninterface State {\n  anonymous: boolean;\n}\n\nclass App extends Component<{}, State> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      anonymous: false\n    };\n  }\n\n  render() {\n    if (userSession.isUserSignedIn() || this.state.anonymous) {\n      return (\n        <Dashboard\n          userSession={userSession}\n          signOut={() => userSession.signUserOut(appConfig.redirectURI())}\n        />\n      );\n    }\n    return (\n      <Signin\n        signIn={() => userSession.redirectToSignIn()}\n        tryAnonymously={() => this.setState({anonymous: true})}\n      />\n    );\n  }\n\n  componentDidMount() {\n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then(() => {\n        // There is probably a better way of thing this\n        window.location.href = appConfig.redirectURI();\n      });\n    }\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// Done :^)\nserviceWorker.register();\n"],"sourceRoot":""}